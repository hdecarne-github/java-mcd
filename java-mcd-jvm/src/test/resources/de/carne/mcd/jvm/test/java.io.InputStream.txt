/*
 * Class file version: 52.0
 *
 * Source file: InputStream.java
 */
package java.io;

public abstract /* super */ class InputStream implements Closeable {
    
    private static final int MAX_SKIP_BUFFER_SIZE = 2048;
    
    public void <init>() {
        // max_stack: 1
        // max_locals: 1
        0000: aload_0
        0001: invokespecial #1 // Object.<init> ()V
        0004: return
    }
    
    public abstract int read() throws IOException;
    
    public int read(byte[]) throws IOException {
        // max_stack: 4
        // max_locals: 2
        0000: aload_0
        0001: aload_1
        0002: iconst_0
        0003: aload_1
        0004: arraylength
        0005: invokevirtual #2 // InputStream.read ([BII)I
        0008: ireturn
    }
    
    public int read(byte[], int, int) throws IOException {
        // max_stack: 3
        // max_locals: 7
        0000: aload_1
        0001: ifnonnull +11 // 000c
        0004: new #3 // java/lang/NullPointerException
        0007: dup
        0008: invokespecial #4 // NullPointerException.<init> ()V
        000b: athrow
        000c: iload_2
        000d: iflt +15 // 001c
        0010: iload_3
        0011: iflt +11 // 001c
        0014: iload_3
        0015: aload_1
        0016: arraylength
        0017: iload_2
        0018: isub
        0019: if_icmple +11 // 0024
        001c: new #5 // java/lang/IndexOutOfBoundsException
        001f: dup
        0020: invokespecial #6 // IndexOutOfBoundsException.<init> ()V
        0023: athrow
        0024: iload_3
        0025: ifne +5 // 002a
        0028: iconst_0
        0029: ireturn
        002a: aload_0
        002b: invokevirtual #7 // InputStream.read ()I
        002e: istore local_4
        0030: iload local_4
        0032: iconst_m1
        0033: if_icmpne +5 // 0038
        0036: iconst_m1
        0037: ireturn
        0038: aload_1
        0039: iload_2
        003a: iload local_4
        003c: i2b
        003d: bastore
        003e: iconst_1
        003f: istore local_5
        0041: iload local_5
        0043: iload_3
        0044: if_icmpge +33 // 0065
        0047: aload_0
        0048: invokevirtual #7 // InputStream.read ()I
        004b: istore local_4
        004d: iload local_4
        004f: iconst_m1
        0050: if_icmpne +6 // 0056
        0053: goto +18 // 0065
        0056: aload_1
        0057: iload_2
        0058: iload local_5
        005a: iadd
        005b: iload local_4
        005d: i2b
        005e: bastore
        005f: iinc local_5, 1
        0062: goto -33 // 0041
        0065: goto +5 // 006a
        0068: astore local_6
        006a: iload local_5
        006c: ireturn
    }
    
    public long skip(long) throws IOException {
        // max_stack: 7
        // max_locals: 8
        0000: lload_1
        0001: lstore_3
        0002: lload_1
        0003: lconst_0
        0004: lcmp
        0005: ifgt +5 // 000a
        0008: lconst_0
        0009: lreturn
        000a: ldc2_w #10 // 2048l
        000d: lload_3
        000e: invokestatic #12 // Math.min (JJ)J
        0011: l2i
        0012: istore local_6
        0014: iload local_6
        0016: newarray 8 // byte[]
        0018: astore local_7
        001a: lload_3
        001b: lconst_0
        001c: lcmp
        001d: ifle +37 // 0042
        0020: aload_0
        0021: aload local_7
        0023: iconst_0
        0024: iload local_6
        0026: i2l
        0027: lload_3
        0028: invokestatic #12 // Math.min (JJ)J
        002b: l2i
        002c: invokevirtual #2 // InputStream.read ([BII)I
        002f: istore local_5
        0031: iload local_5
        0033: ifge +6 // 0039
        0036: goto +12 // 0042
        0039: lload_3
        003a: iload local_5
        003c: i2l
        003d: lsub
        003e: lstore_3
        003f: goto -37 // 001a
        0042: lload_1
        0043: lload_3
        0044: lsub
        0045: lreturn
    }
    
    public int available() throws IOException {
        // max_stack: 1
        // max_locals: 1
        0000: iconst_0
        0001: ireturn
    }
    
    public void close() throws IOException {
        // max_stack: 0
        // max_locals: 1
        0000: return
    }
    
    public synchronized void mark(int) {
        // max_stack: 0
        // max_locals: 2
        0000: return
    }
    
    public synchronized void reset() throws IOException {
        // max_stack: 3
        // max_locals: 1
        0000: new #8 // java/io/IOException
        0003: dup
        0004: ldc #13 // "mark/reset not supported"
        0006: invokespecial #14 // IOException.<init> (Ljava/lang/String;)V
        0009: athrow
    }
    
    public boolean markSupported() {
        // max_stack: 1
        // max_locals: 1
        0000: iconst_0
        0001: ireturn
    }

}
