0000: push cs
0001: pop ds
0002: mov dx, 0x000e
0005: mov ah, 0x09
0007: int 0x21
0009: mov ax, 0x4c01
000c: int 0x21
000e: push sp
000f: push 0x7369
0012: and [bx+si+114], dh
0015: outs dx, ds:[si]
0016: jb +97 ; 007a
0019: ins es:[di], dx
001a: and [bp+di+97], ah
001d: outs dx, ds:[si]
001e: outs dx, ds:[si]
001f: outs dx, ds:[si]
0020: jz +32 ; 0042
0022: bound sp, m16
0024: and [bp+si+117], dh
0027: outs dx, ds:[si]
0028: and [bx+di+110], ch
002b: and [si+79], al
002e: push bx
002f: and [di+111], ch
0032: db 0x0d
0036: db 0x0d
0037: or ah, [si]
0039: add [bx+si], al
003b: add [bx+si], al
003d: add [bx+si], al
003f: add [bp-6], bh
0042: add dl, al
0044: cmp bl, [bp+di-31892]
0048: cmp bl, [bp+di-31892]
004c: cmp bl, [bp+di-31892]
0050: xchg dx, sp
0052: cli
0053: xor [0x6c9b], 0x83
0058: xor sp, bx
005a: stc
005b: and [bx], 0x9b
005e: ins es:[di], dx
005f: sbb [di], 0x5d
0062: add [bp+di-25799], ax
0066: ins es:[di], dx
0067: sbb [di], 0x5d
006a: add al, [bp+di-25797]
006e: ins es:[di], dx
006f: sbb [di], 0x5d
0072: db 0x17
0073: xor [bx+di], 0x9b
0076: ins es:[di], dx
0077: cmp [bp+si], 0x9b
007a: ins es:[di], dx
007b: cmp [bp+di], 0x9a
007e: ins es:[di], dx
007f: xor [bp+di], 0xe3
0082: out dx, eax
0083: xor di, 0x9b
0086: ins es:[di], dx
0087: xor [bp+di], 0xe3
008a: call +23683 ; 5d10
008d: fwait
008e: ins es:[di], dx
008f: xor [bp+di], 0xe3
0092: inc [bp+di-25797]
0096: ins es:[di], dx
0097: xor [bp+di], 0xe3
009a: clc
009b: cmp [bp+di], 0x9b
009e: ins es:[di], dx
009f: xor [bp+di], 0xe3
00a2: std
00a3: cmp [bp+di], 0x9b
00a6: ins es:[di], dx
00a7: adc [bp+si+105], 0x63
00ab: push 0x9b3a
00ae: ins es:[di], dx
00af: add [bx+si], 0x00
00b2: add [bx+si], al
00b4: add [bx+si], al
00b6: add [bx+si], al
