00000000: push ebp
00000001: mov ebp, esp
00000003: push [di]+14
00000006: push [di]+10
00000009: push [di]+0c
0000000c: push [di]+08
0000000f: call jvds
00000010: mov bh, 0xe9
00000012: add [bx+si], eax
00000014: mov eax, [di]+08
00000017: add esp, 0x10
0000001a: pop ebp
0000001b: retn
0000001c: push ebp
0000001d: mov ebp, esp
0000001f: push [di]+14
00000022: push [di]+10
00000025: push [di]+0c
00000028: push [di]+08
0000002b: call jvds
0000002c: sbb dl, ch
0000002e: add [bx+si], eax
00000030: mov eax, [di]+08
00000033: add esp, 0x10
00000036: pop ebp
00000037: retn
00000038: mov [bx+di], 0x0043a44c
0000003e: jmp jvds
0000003f: inc eax
00000040: jmp +1 ; 41
00000042: add [bp]+8b, dl
00000045: int1
00000046: mov a44c, 0x32e80043
0000004e: jmp +1 ; 4f
00000050: add dh, dh
00000052: inc esp
00000053: and al, 0x08
00000055: add [si]+07, esi
00000058: push esi
00000059: call jvds
0000005a: mov edx, 0x590001eb
0000005f: mov eax, esi
00000061: pop esi
00000062: retn 0x0004
00000065: mov eax, ?
00000066: add [bp]+45, bl
00000069: add bl, al
0000006b: push esi
0000006c: push 0x00
0000006e: push 0x00000080
00000073: push 0x03
00000075: push 0x00
00000077: push 0x03
00000079: push 0x80000000
0000007e: call jvds
0000007f: int 0x43
00000081: add [bx+si], al
00000083: push eax
00000084: call [di]
00000086: pop eax
00000087: mov eax, ?
00000088: inc ebx
00000089: add [bp+di]+85f0, cl
0000008d: div [si]+05
00000090: cmp esi, 0xff
00000093: jnz +41 ; bc
00000095: push edi
00000096: call [di]
00000098: push esp
00000099: mov eax, ?
0000009a: inc ebx
0000009b: add [bp+di]+e8f8, cl
0000009f: lods ?
000000a0: inc ebx
000000a1: add [bx+si], al
000000a3: push eax
000000a4: push edi
000000a5: push esi
000000a6: push 0x0043a488
000000ab: call jvds
000000ac: db 0xfe
000000ad: scas ?
000000ae: add [bx+si], al
000000b0: push 0x0043a454
000000b5: call jvds
000000b6: retf 0x002e
000000b9: add [bp+di]+14c4, al
000000bd: pop edi
000000be: mov eax, esi
000000c0: pop esi
000000c1: retn
000000c2: push esi
000000c3: push 0x03
000000c5: call jvds
000000c6: and esp, edi
000000c8: add [bx+si], eax
000000ca: mov esi, [si]+24
000000cd: or al, 0x6a
000000cf: add dl, [bp]+50
000000d2: mov ?, eax
000000d3: or al, 0x5e
000000d5: inc ebp
000000d6: add al, ch
000000d8: push esp
000000d9: jmp +1 ; da
000000db: add [bx+di]+5e0c, ah
000000df: inc ebp
000000e0: add [bp]+c6, dl
000000e3: inc eax
000000e4: add al, [bx+si]
000000e6: call jvds
000000e7: push ebp
000000e8: call jvds
000000e9: add [bx+si], eax
000000eb: add esp, 0x14
000000ee: cmp eax, 0x05
000000f1: jnz +46 ; 11f
000000f3: mov eax, ?
000000f4: add al, 0x5e
000000f6: inc ebp
000000f7: add [di]+75c0, al
000000fb: or eax, 0xeae8036a
00000100: out 0x01, al
00000102: add [bx+di]+a3, bl
00000105: add al, 0x5e
00000107: inc ebp
00000108: add [bp+si]+02, ch
0000010b: add esi, 0x03
0000010e: push esi
0000010f: push eax
00000110: call jvds
00000111: sbb ebp, ebx
00000113: add [bx+si], eax
00000115: mov eax, ?
00000116: add al, 0x5e
00000118: inc ebp
00000119: add [bp+di]+0cc4, al
0000011d: mov [bx+si]+02, 0x00
00000121: pop esi
00000122: retn
00000123: mov eax, ?
00000124: or al, 0x5e
00000126: inc ebp
00000127: add [di]+74c0, al
0000012b: movmskps gdqp, ups
0000012d: push [si]+24
00000130: or al, ch
00000132: sub ch, ah
00000134: add [bx+si], eax
00000136: pop ecx
00000137: pop ecx
00000138: mov al, 0x01
0000013a: retn
0000013b: xor al, al
0000013d: retn
0000013e: mov eax, ?
0000013f: add al, 0x5e
00000141: inc ebp
00000142: add [di]+74c0, al
00000146: movmskps gdqp, ups
00000148: push [si]+24
0000014b: or al, ch
0000014d: paddsb pq, qq
0000014f: add [bx+si], eax
00000151: pop ecx
00000152: pop ecx
00000153: mov al, 0x01
00000155: retn
00000156: xor al, al
00000158: retn
00000159: push ecx
0000015a: push ebx
0000015b: push ebp
0000015c: push esi
0000015d: mov esi, [di]
0000015f: pop esp
00000160: mov eax, ?
00000161: inc ebx
00000162: add [bx]+8b, dl
00000165: jl +36 ; 189
00000167: sbb [bp+di], dh
00000169: in eax, dx
0000016a: push ebp
0000016b: push ebp
0000016c: push 0x3c
0000016e: push edi
0000016f: call esi
00000171: push edi
00000172: call jvds
00000173: push edx
00000174: xor [bx+si], eax
00000176: add [bx+di]+8b, bl
00000179: fcom essr
0000017b: add ebx, 0x04
0000017e: push ebp
0000017f: lea eax, ?
00000181: add dl, [bx+si]+57
00000184: call esi
00000186: push edi
00000187: call jvds
00000188: xchg esi, [bx+di]
0000018a: add [bx+si], al
0000018c: movsx ebp, ax
0000018f: push ebp
00000190: push 0x0043a570
00000195: call jvds
00000196: jnl -81 ; 145
00000198: add [bx+si], al
0000019a: add esp, 0x0c
0000019d: push 0x00
0000019f: push 0x00
000001a1: lea eax, ?
000001a3: adc [bx+si]+57, dl
000001a6: call esi
000001a8: push edi
000001a9: call jvds
000001aa: gs
000001ab: xor [bx+si], eax
000001ad: add [bx+si]+6850, bl
000001b1: xor al, 0xa5
000001b3: inc ebx
000001b4: add [bx+di]+2444, cl
000001b8: sbb al, 0xe8
000001ba: pop ecx
000001bb: scas ?
000001bc: add [bx+si], al
000001be: imul ebp, ebp, 0x28
000001c1: add ebp, [si]+24
000001c4: sbb al, 0x8d
000001c6: pop esp
000001c7: sub ebp, esp
000001c9: push ebx
000001ca: push 0x0043a500
000001cf: call jvds
000001d0: inc ebx
000001d1: scas ?
000001d2: add [bx+si], al
000001d4: add esp, 0x14
000001d7: push 0x00
000001d9: push 0x00
000001db: lea eax, ?
000001dd: adc [bx+si]+57, dl
000001e0: call esi
000001e2: push edi
000001e3: call jvds
000001e4: loopz +48 ; 214
000001e6: add [bx+si], al
000001e8: pop ecx
000001e9: push 0x00
000001eb: push 0x00
000001ed: add ebx, 0x14
000001f0: push ebx
000001f1: push edi
000001f2: mov ebp, eax
000001f4: call esi
000001f6: push edi
000001f7: call jvds
000001f8: int 0x30
000001fa: add [bx+si], al
000001fc: mov ebx, eax
000001fe: push ebx
000001ff: push ebp
00000200: push 0x0043a4b8
00000205: call jvds
00000206: or eax, 0x830000af
0000020b: les edx, ?
0000020d: push 0x00
0000020f: push 0x00
00000211: add ebx, ebp
00000213: push ebx
00000214: push edi
00000215: call esi
00000217: pop edi
00000218: pop esi
00000219: pop ebp
0000021a: pop ebx
0000021b: pop ecx
0000021c: retn
0000021d: push ebp
0000021e: lea ebp, ?
00000220: and al, 0xec
00000222: call jvds
00000223: db 0xff
00000224: db 0xff
00000225: mov eax, 0x00001794
0000022a: call jvds
0000022b: inc ecx
0000022c: in al, dx
0000022d: add [bx+si], eax
0000022f: mov eax, ?
00000230: or [bx+di]+45, 0x00
00000234: xor eax, ebp
00000236: mov [di]+1710, eax
0000023a: add [bx+si], al
0000023c: mov eax, [di]+171c
00000240: add [bx+si], al
00000242: push ebx
00000243: push esi
00000244: xor ebx, ebx
00000246: push edi
00000247: mov [di]+8c, eax
0000024a: mov eax, [di]+1720
0000024e: add [bx+si], al
00000250: xor edi, edi
00000252: cmp [di]+1728, ebx
00000256: add [bx+si], al
00000258: mov [di]+88, eax
0000025b: mov [di]+94, ebx
0000025e: jl jvds
00000260: retn 0x0000
00000263: add [bx]+0c, bh
00000266: cmp [di]+1724, ebx
0000026a: add [bx+si], al
0000026c: jbe jvds
0000026e: mov ah, 0x00
00000270: add [bx+si], al
00000272: mov ecx, [di]+1724
00000276: add [bx+si], al
00000278: sub ecx, [di]+94
0000027b: mov eax, [di]+1728
0000027f: add [bx+si], al
00000281: sbb eax, edi
00000283: js +20 ; 297
00000285: jnle +8 ; 28d
00000287: cmp ecx, 0x00001770
0000028d: jbe +10 ; 297
0000028f: mov ecx, 0x00001770
00000294: mov [di]+84, ebx
00000297: jmp +3 ; 29a
00000299: mov [di]+84, eax
0000029c: push ebx
0000029d: lea eax, ?
0000029f: pushf
000002a0: push eax
000002a1: push ecx
000002a2: lea eax, ?
000002a4: mov al, ?
000002a5: push eax
000002a6: push [di]+8c
000002a9: call [di]
000002ab: fs
000002ac: mov eax, ?
000002ad: inc ebx
000002ae: add [di]+0fc0, al
000002b2: test [bx+si]+0000, ch
000002b6: add [bp+di]+9c45, cl
000002ba: cmp eax, ebx
000002bc: jz jvds
000002be: popf
000002bf: add [bx+si], al
000002c1: add [bx+si], bh
000002c3: popf
000002c4: sub al, 0x17
000002c6: add [bx+si], al
000002c8: jz +16 ; 2d8
000002ca: xor ecx, ecx
000002cc: cmp eax, ebx
000002ce: jbe +10 ; 2d8
000002d0: xor [si]+0d, 0xa0
000002d4: mov [bx+di]+3b, al
000002d7: enter 0xf672, 0x33
000002db: idiv [bp+di]
000002dd: retn
000002de: jbe +36 ; 302
000002e0: push ebx
000002e1: lea ecx, ?
000002e3: xchg eax, eax
000002e4: push ecx
000002e5: sub eax, esi
000002e7: push eax
000002e8: lea eax, ?
000002ea: xor eax, 0x75ff50a0
000002ef: mov bh, bh
000002f1: adc eax, 0x0043a160
000002f6: test eax, eax
000002f8: jz +70 ; 33e
000002fa: add esi, [di]+90
000002fd: mov eax, [di]+9c
00000300: cmp esi, eax
00000302: jb -36 ; 2de
00000304: add [di]+94, eax
00000307: adc edi, ebx
00000309: cmp edi, [di]+1728
0000030d: add [bx+si], al
0000030f: jl jvds
00000311: pop ebp
00000312: db 0xff
00000313: db 0xff
00000314: db 0xff
00000315: jnle +15 ; 324
00000317: mov eax, [di]+1724
0000031b: add [bx+si], al
0000031d: cmp [di]+94, eax
00000320: jb jvds
00000322: dec esp
00000323: db 0xff
00000324: db 0xff
00000325: push [bp+di]
00000327: ror [bp+di]+108d, 0x17
0000032c: add [bx+si], al
0000032e: pop edi
0000032f: pop esi
00000330: xor ecx, ebp
00000332: pop ebx
00000333: call jvds
00000334: and bl, ch
00000336: add [bx+si], eax
00000338: add ebp, 0x00001714
0000033e: leave
0000033f: retn
00000340: call [di]
00000342: push esp
00000343: mov eax, ?
00000344: inc ebx
00000345: add [bx+si]+8b, dl
00000348: inc ebp
00000349: pushf
0000034a: sub eax, esi
0000034c: push eax
0000034d: push 0x0043a5d8
00000352: call jvds
00000353: push edi
00000354: lods ?
00000355: add [bx+si], al
00000357: add esp, 0x0c
0000035a: push 0x02
0000035c: pop eax
0000035d: jmp -55 ; 326
0000035f: push edi
00000360: push [di]+94
00000363: call [di]
00000365: push esp
00000366: mov eax, ?
00000367: inc ebx
00000368: add [bx+si]+ff, dl
0000036b: jnz -100 ; 307
0000036d: push 0x0043a5a0
00000372: call jvds
00000373: aaa
00000374: lods ?
00000375: add [bx+si], al
00000377: xor eax, eax
00000379: add esp, 0x14
0000037c: inc eax
0000037d: jmp -87 ; 326
0000037f: push esi
00000380: mov esi, ecx
00000382: mov eax, c085
00000386: jnz +11 ; 391
00000388: call jvds
00000389: imul ebp, esp, 0x01
0000038c: add [bp+di]+8506, cl
00000390: sal [si]+04, 0x8b
00000394: add bl, ch
00000396: add dh, [bp+di]
00000398: ror [bp+di]+044e, 0x3b
0000039d: dec eax
0000039e: sbb [di]+05, dh
000003a1: call jvds
000003a2: push edx
000003a3: in al, dx
000003a4: add [bx+si], eax
000003a6: mov eax, [bp]+04
000003a9: add eax, 0x0c
000003ac: pop esi
000003ad: retn
000003ae: cmp [si]+24, 0x04
000003b2: add [bp]+74, dl
000003b5: sub eax, 0x8d18718b
000003ba: inc ecx
000003bb: add al, 0x83
000003bd: db 0xfe
000003be: adc [bp+si]+04, dh
000003c1: mov edx, [bx+si]
000003c3: jmp +2 ; 3c5
000003c5: mov edx, eax
000003c7: cmp [si]+24, edx
000003ca: or [bp+si]+16, dh
000003cd: cmp esi, 0x10
000003d0: jb +2 ; 3d2
000003d2: mov eax, [bx+si]
000003d4: mov ecx, [bx+di]+14
000003d7: add ecx, eax
000003d9: cmp ecx, [si]+24
000003dc: or [bp]+04, dh
000003df: mov al, 0x01
000003e1: jmp +2 ; 3e3
000003e3: xor al, al
000003e5: pop esi
000003e6: retn 0x0004
000003e9: mov edx, [si]+24
000003ec: add al, 0x8b
000003ee: add dl, [bp]+8b
000003f1: jo +8 ; 3f9
000003f3: mov [bp+si], esi
000003f5: mov esi, [bx+si]+08
000003f8: cmp [bp]+15, 0x00
000003fc: jnz +3 ; 3ff
000003fe: mov [bp]+04, edx
00000401: mov esi, [bp+si]+04
00000404: mov [bx+si]+04, esi
00000407: mov ecx, [bx+di]+18
0000040a: pop esi
0000040b: cmp edx, [bx+di]+04
0000040e: jnz +5 ; 413
00000410: mov [bx+di]+04, eax
00000413: jmp +15 ; 422
00000415: mov ecx, [bp+si]+04
00000418: cmp edx, [bx+di]+08
0000041b: jnz +5 ; 420
0000041d: mov [bx+di]+08, eax
00000420: jmp +2 ; 422
00000422: mov [bx+di], eax
00000424: mov [bx+si]+08, edx
00000427: mov [bp+si]+04, eax
0000042a: retn 0x0004
0000042d: push ebp
0000042e: mov ebp, esp
00000430: mov eax, ecx
00000432: mov ecx, [di]+08
00000435: mov [bx+si], ecx
00000437: mov ecx, [di]+0c
0000043a: mov [bx+si]+04, ecx
0000043d: mov ecx, [di]+10
00000440: mov [bx+si]+08, ecx
00000443: mov ecx, [di]+14
00000446: mov edx, [bx+di]
00000448: mov [bx+si]+0c, edx
0000044b: mov ecx, [bx+di]+04
0000044e: mov [bx+si]+10, ecx
00000451: mov cl, [di]+18
00000454: mov [bx+si]+14, cl
00000457: mov [bx+si]+15, 0x00
0000045b: pop ebp
0000045c: retn 0x0014
0000045f: mov eax, [si]+24
00000462: add al, 0x8b
00000464: dec esp
00000465: and al, 0x08
00000467: cmp eax, ecx
00000469: jz +10 ; 473
0000046b: mov dl, [bx+si]
0000046d: push ebx
0000046e: mov bl, [bx+di]
00000470: mov [bx+si], bl
00000472: mov [bx+di], dl
00000474: pop ebx
00000475: retn
00000476: push ebp
00000477: mov ebp, esp
00000479: mov ecx, [di]+08
0000047c: sub esp, 0x0c
0000047f: test ecx, ecx
00000481: jnbe +11 ; 48c
00000483: xor ecx, ecx
00000485: push ecx
00000486: call jvds
00000487: cbw
00000488: jmp +1 ; 489
0000048a: add [bx+di]+c9, bl
0000048d: retn
0000048e: or eax, 0xff
00000491: xor edx, edx
00000493: div ecx
00000495: cmp eax, 0x01
00000498: jnb -21 ; 483
0000049a: and [di]+08, 0x00
0000049e: lea eax, ?
000004a0: or [bx+si]+8d, dl
000004a3: dec ebp
000004a4: hlt
000004a5: call jvds
000004a6: or al, 0xe6
000004a8: add [bx+si], eax
000004aa: push 0x0044ef68
000004af: lea eax, ?
000004b1: hlt
000004b2: push eax
000004b3: mov [di]+f4, 0x0043a44c
000004ba: call jvds
000004bb: leave
000004bc: jmp +1 ; 4bd
000004be: add ah, cl
000004c0: push ebp
000004c1: mov ebp, esp
000004c3: mov ecx, [di]+08
000004c6: sub esp, 0x0c
000004c9: test ecx, ecx
000004cb: jnbe +14 ; 4d9
000004cd: xor ecx, ecx
000004cf: imul ecx, ecx, 0x18
000004d2: push ecx
000004d3: call jvds
000004d4: dec ebx
000004d5: jmp +1 ; 4d6
000004d7: add [bx+di]+c9, bl
000004da: retn
000004db: or eax, 0xff
000004de: xor edx, edx
000004e0: div ecx
000004e2: cmp eax, 0x18
000004e5: jnb -24 ; 4cd
000004e7: and [di]+08, 0x00
000004eb: lea eax, ?
000004ed: or [bx+si]+8d, dl
000004f0: dec ebp
000004f1: hlt
000004f2: call jvds
000004f3: mov edi, 0x680001e5
000004f8: push 0x8d0044ef
000004fd: inc ebp
000004fe: hlt
000004ff: push eax
00000500: mov [di]+f4, 0x0043a44c
00000507: call jvds
00000508: jl -21 ; 4f3
0000050a: add [bx+si], eax
0000050c: int 3
0000050d: push esi
0000050e: push [si]+24
00000511: or [bp+di]+e8f1, cl
00000515: or eax, 0xc70001e6
0000051a: push es
0000051b: dec esp
0000051c: movs ?, ?
0000051d: inc ebx
0000051e: add [bp+di]+5ec6, cl
00000522: retn 0x0004
00000525: int 3
00000526: push ebp
00000527: mov ebp, esp
00000529: sub esp, 0x000006c4
0000052f: push ebx
00000530: push esi
00000531: push edi
00000532: mov esi, 0x0043ac80
00000537: push esi
00000538: push [di]+0c
0000053b: call jvds
0000053c: and al, ch
0000053e: add [bx+si], eax
00000540: pop ecx
00000541: pop ecx
00000542: call [di]
00000544: jo -95 ; 4e5
00000546: inc ebx
00000547: add [bp+di]+087d, cl
0000054b: movzx eax, ax
0000054e: mov [di]+f8, eax
00000551: mov [di]+ff, 0x00
00000555: test edi, edi
00000557: jz jvds
00000559: xchg ebp, eax
0000055a: add [bx+si], al
0000055c: add [bp+di]+1047, cl
00000560: sub eax, [bx]+0c
00000563: and [di]+08, 0x00
00000567: sar eax, 0x02
0000056a: test eax, eax
0000056c: jbe +108 ; 5d8
0000056e: mov ebx, 0x0043ac44
00000573: push [di]+08
00000576: mov ecx, edi
00000578: call jvds
00000579: movs ?, ?
0000057a: push esi
0000057b: add [bx+si], al
0000057d: push 0x0043ac00
00000582: push [bx+si]
00000584: call jvds
00000585: pushf
00000586: jmp +1 ; 587
00000588: add [bx+di]+59, bl
0000058b: test eax, eax
0000058d: jnz +6 ; 593
0000058f: mov [di]+ff, 0x01
00000593: jmp +41 ; 5bc
00000595: push [di]+08
00000598: mov ecx, edi
0000059a: call jvds
0000059b: adc [bp]+00, 0x00
0000059f: push ebx
000005a0: mov [di]+f4, eax
000005a3: call jvds
000005a4: arpl bx, bp
000005a6: add [bx+si], eax
000005a8: push eax
000005a9: mov eax, [di]+f4
000005ac: push ebx
000005ad: push [bx+si]
000005af: call jvds
000005b0: and bl, ch
000005b2: add [bx+si], eax
000005b4: add esp, 0x10
000005b7: test eax, eax
000005b9: jnz +3 ; 5bc
000005bb: mov [di]+ff, al
000005be: mov eax, [bx]+10
000005c1: sub eax, [bx]+0c
000005c4: inc [di]+08
000005c7: sar eax, 0x02
000005ca: cmp [di]+08, eax
000005cd: jb -92 ; 571
000005cf: cmp [di]+ff, 0x00
000005d3: mov eax, 0x0043abf4
000005d8: jnz +5 ; 5dd
000005da: mov eax, 0x0043abec
000005df: push eax
000005e0: push 0x0043aba8
000005e5: call jvds
000005e6: sub eax, 0x800000ab
000005eb: jnl -1 ; 5ea
000005ed: add [bx+di]+59, bl
000005f0: jnz +39 ; 617
000005f2: push 0x0043ab98
000005f7: call [di]
000005f9: ins ?, dx
000005fa: mov eax, ?
000005fb: inc ebx
000005fc: add [di]+74c0, al
00000600: sbb [bx+si]+7c, ch
00000603: stos ?
00000604: inc ebx
00000605: add [bx+si]+ff, dl
00000608: adc eax, 0x0043a168
0000060d: test eax, eax
0000060f: jz +8 ; 617
00000611: call eax
00000613: movzx eax, ax
00000616: mov [di]+f8, eax
00000619: push 0x02
0000061b: xor eax, eax
0000061d: inc eax
0000061e: db 0x66
0000061f: mov [di]+f93c, eax
00000623: db 0xff
00000624: callf mptp
00000626: push 0x03
00000628: db 0x66
00000629: mov [di]+f944, eax
0000062d: db 0xff
0000062e: callf mptp
00000630: push 0x04
00000632: db 0x66
00000633: mov [di]+f94c, eax
00000637: db 0xff
00000638: callf mptp
0000063a: push 0x05
0000063c: db 0x66
0000063d: mov [di]+f954, eax
00000641: db 0xff
00000642: callf mptp
00000644: push 0x06
00000646: db 0x66
00000647: mov [di]+f95c, eax
0000064b: db 0xff
0000064c: callf mptp
0000064e: push 0x07
00000650: db 0x66
00000651: mov [di]+f964, eax
00000655: db 0xff
00000656: callf mptp
00000658: push 0x08
0000065a: db 0x66
0000065b: mov [di]+f96c, eax
0000065f: db 0xff
00000660: callf mptp
00000662: push 0x09
00000664: db 0x66
00000665: mov [di]+f974, eax
00000669: db 0xff
0000066a: callf mptp
0000066c: push 0x0a
0000066e: db 0x66
0000066f: mov [di]+f97c, eax
00000673: db 0xff
00000674: callf mptp
00000676: push 0x0b
00000678: db 0x66
00000679: mov [di]+f984, eax
0000067d: db 0xff
0000067e: callf mptp
00000680: push 0x0c
00000682: db 0x66
00000683: mov [di]+f98c, eax
00000687: db 0xff
00000688: callf mptp
0000068a: push 0x0d
0000068c: db 0x66
0000068d: mov [di]+f994, eax
00000691: db 0xff
00000692: callf mptp
00000694: push 0x0e
00000696: db 0x66
00000697: mov [di]+f99c, eax
0000069b: db 0xff
0000069c: callf mptp
0000069e: push 0x0f
000006a0: db 0x66
000006a1: mov [di]+f9a4, eax
000006a5: db 0xff
000006a6: callf mptp
000006a8: push 0x10
000006aa: db 0x66
000006ab: mov [di]+f9ac, eax
000006af: db 0xff
000006b0: callf mptp
000006b2: push 0x11
000006b4: db 0x66
000006b5: mov [di]+f9b4, eax
000006b9: db 0xff
000006ba: callf mptp
000006bc: push 0x12
000006be: db 0x66
000006bf: mov [di]+f9bc, eax
000006c3: db 0xff
000006c4: callf mptp
000006c6: push 0x13
000006c8: db 0x66
000006c9: mov [di]+f9c4, eax
000006cd: db 0xff
000006ce: callf mptp
000006d0: push 0x14
000006d2: db 0x66
000006d3: mov [di]+f9cc, eax
000006d7: db 0xff
000006d8: callf mptp
000006da: mov [di]+f940, 0xab78ffff
000006e2: inc ebx
000006e3: add bh, al
000006e5: test [bx+si]+f9, ecx
000006e8: db 0xff
000006e9: push [si]+ab
000006ec: inc ebx
000006ed: add bh, al
000006ef: test [bx+si]+f9, edx
000006f2: db 0xff
000006f3: push [bx+si]+ab
000006f6: inc ebx
000006f7: add bh, al
000006f9: test [bx+si]+f9, ebx
000006fc: db 0xff
000006fd: jmpf mptp
000006ff: stos ?
00000700: inc ebx
00000701: add bh, al
00000703: test [bx+si]+f9, esp
00000706: db 0xff
00000707: jmpf mptp
00000709: stos ?
0000070a: inc ebx
0000070b: add bh, al
0000070d: test [bx+si]+f9, ebp
00000710: db 0xff
00000711: jmp [si]+ab
00000714: inc ebx
00000715: add bh, al
00000717: test [bx+si]+f9, esi
0000071a: db 0xff
0000071b: jmp [bx+si]+ab
0000071e: inc ebx
0000071f: add bh, al
00000721: test [bx+si]+f9, edi
00000724: db 0xff
00000725: callf mptp
00000727: stos ?
00000728: inc ebx
00000729: add [bx+di]+80b5, cl
0000072d: stc
0000072e: db 0xff
0000072f: inc edi
00000731: test [bx+si]+fff9, ecx
00000735: callf mptp
00000737: stos ?
00000738: inc ebx
00000739: add bh, al
0000073b: test [bx+si]+fff9, edx
0000073f: call [si]+ab
00000742: inc ebx
00000743: add bh, al
00000745: test [bx+si]+fff9, ebx
00000749: call [bx+si]+ab
0000074c: inc ebx
0000074d: add bh, al
0000074f: test [bx+si]+fff9, esp
00000753: dec [si]+ab
00000756: inc ebx
00000757: add bh, al
00000759: test [bx+si]+fff9, ebp
0000075d: dec [bx+si]+ab
00000760: inc ebx
00000761: add bh, al
00000763: test [bx+si]+fff9, esi
00000767: inc [si]+ab
0000076a: inc ebx
0000076b: add bh, al
0000076d: test [bx+si]+fff9, edi
00000771: inc [bx+si]+ab
00000774: inc ebx
00000775: add bh, al
00000777: test eax, eax
00000779: stc
0000077a: db 0xff
0000077b: db 0xff
0000077c: cmp al, 0xab
0000077e: inc ebx
0000077f: add bh, al
00000781: test eax, ecx
00000783: stc
00000784: db 0xff
00000785: db 0xff
00000786: cmp [bp+di]+0043, ch
0000078a: mov [di]+f9d0, 0xab34ffff
00000792: inc ebx
00000793: add [bp]+89, ah
00000796: test esp, edx
00000798: stc
00000799: db 0xff
0000079a: inc edi
0000079c: test eax, ebx
0000079e: stc
0000079f: db 0xff
000007a0: push [bx+si]
000007a2: stos ?
000007a3: inc ebx
000007a4: add [bp+si]+15, ch
000007a7: pop eax
000007a8: push 0x16
000007aa: db 0x66
000007ab: mov [di]+f9dc, eax
000007af: db 0xff
000007b0: callf mptp
000007b2: push 0x17
000007b4: db 0x66
000007b5: mov [di]+f9e4, eax
000007b9: db 0xff
000007ba: callf mptp
000007bc: push 0x18
000007be: db 0x66
000007bf: mov [di]+f9ec, eax
000007c3: db 0xff
000007c4: callf mptp
000007c6: push 0x19
000007c8: db 0x66
000007c9: mov [di]+f9f4, eax
000007cd: db 0xff
000007ce: callf mptp
000007d0: push 0x1a
000007d2: db 0x66
000007d3: mov [di]+f9fc, eax
000007d7: db 0xff
000007d8: callf mptp
000007da: push 0x1b
000007dc: db 0x66
000007dd: mov [di]+fa04, eax
000007e1: db 0xff
000007e2: callf mptp
000007e4: push 0x1c
000007e6: db 0x66
000007e7: mov [di]+fa0c, eax
000007eb: db 0xff
000007ec: callf mptp
000007ee: push 0x1d
000007f0: db 0x66
000007f1: mov [di]+fa14, eax
000007f5: db 0xff
000007f6: callf mptp
000007f8: push 0x1e
000007fa: db 0x66
000007fb: mov [di]+fa1c, eax
000007ff: db 0xff
00000800: callf mptp
00000802: push 0x1f
00000804: db 0x66
00000805: mov [di]+fa24, eax
00000809: db 0xff
0000080a: callf mptp
0000080c: push 0x20
0000080e: db 0x66
0000080f: mov [di]+fa2c, eax
00000813: db 0xff
00000814: callf mptp
00000816: push 0x21
00000818: db 0x66
00000819: mov [di]+fa34, eax
0000081d: db 0xff
0000081e: callf mptp
00000820: push 0x22
00000822: db 0x66
00000823: mov [di]+fa3c, eax
00000827: db 0xff
00000828: callf mptp
0000082a: push 0x23
0000082c: db 0x66
0000082d: mov [di]+fa44, eax
00000831: db 0xff
00000832: callf mptp
00000834: push 0x24
00000836: db 0x66
00000837: mov [di]+fa4c, eax
0000083b: db 0xff
0000083c: callf mptp
0000083e: push 0x25
00000840: db 0x66
00000841: mov [di]+fa54, eax
00000845: db 0xff
00000846: callf mptp
00000848: push 0x26
0000084a: db 0x66
0000084b: mov [di]+fa5c, eax
0000084f: db 0xff
00000850: callf mptp
00000852: push 0x27
00000854: db 0x66
00000855: mov [di]+fa64, eax
00000859: db 0xff
0000085a: callf mptp
0000085c: push 0x29
0000085e: db 0x66
0000085f: mov [di]+fa6c, eax
00000863: db 0xff
00000864: callf mptp
00000866: push 0x2a
00000868: db 0x66
00000869: mov [di]+fa74, eax
0000086d: db 0xff
0000086e: inc edi
00000870: test eax, esp
00000872: stc
00000873: db 0xff
00000874: jmpf mptp
00000876: stos ?
00000877: inc ebx
00000878: add bh, al
0000087a: test eax, ebp
0000087c: stc
0000087d: db 0xff
0000087e: jmpf mptp
00000880: stos ?
00000881: inc ebx
00000882: add bh, al
00000884: test eax, esi
00000886: stc
00000887: db 0xff
00000888: jmp [si]
0000088a: stos ?
0000088b: inc ebx
0000088c: add bh, al
0000088e: test eax, edi
00000890: stc
00000891: db 0xff
00000892: jmp [bx+si]
00000894: stos ?
00000895: inc ebx
00000896: add bh, al
00000898: test [bx+si], eax
0000089a: cli
0000089b: db 0xff
0000089c: callf mptp
0000089e: stos ?
0000089f: inc ebx
000008a0: add bh, al
000008a2: test [bx+si], ecx
000008a4: cli
000008a5: db 0xff
000008a6: callf mptp
000008a8: stos ?
000008a9: inc ebx
000008aa: add bh, al
000008ac: test [bx+si], edx
000008ae: cli
000008af: db 0xff
000008b0: call [si]
000008b2: stos ?
000008b3: inc ebx
000008b4: add bh, al
000008b6: test [bx+si], ebx
000008b8: cli
000008b9: db 0xff
000008ba: call [bx+si]
000008bc: stos ?
000008bd: inc ebx
000008be: add bh, al
000008c0: test [bx+si], esp
000008c2: cli
000008c3: db 0xff
000008c4: dec [si]
000008c6: stos ?
000008c7: inc ebx
000008c8: add bh, al
000008ca: test [bx+si], ebp
000008cc: cli
000008cd: db 0xff
000008ce: dec [bx+si]
000008d0: stos ?
000008d1: inc ebx
000008d2: add bh, al
000008d4: test [bx+si], esi
000008d6: cli
000008d7: db 0xff
000008d8: inc [si]
000008da: stos ?
000008db: inc ebx
000008dc: add bh, al
000008de: test [bx+si], edi
000008e0: cli
000008e1: db 0xff
000008e2: inc [bx+si]
000008e4: stos ?
000008e5: inc ebx
000008e6: add bh, al
000008e8: test [bx+si]+fa, eax
000008eb: db 0xff
000008ec: db 0xff
000008ed: cld
000008ee: stos ?
000008ef: inc ebx
000008f0: add bh, al
000008f2: test [bx+si]+fa, ecx
000008f5: db 0xff
000008f6: db 0xff
000008f7: clc
000008f8: stos ?
000008f9: inc ebx
000008fa: add bh, al
000008fc: test [bx+si]+fa, edx
000008ff: db 0xff
00000900: push esp
00000902: stos ?
00000903: inc ebx
00000904: add bh, al
00000906: test [bx+si]+fa, ebx
00000909: db 0xff
0000090a: push eax
0000090c: stos ?
0000090d: inc ebx
0000090e: add bh, al
00000910: test [bx+si]+fa, esp
00000913: db 0xff
00000914: jmpf mptp
00000916: stos ?
00000917: inc ebx
00000918: add bh, al
0000091a: test [bx+si]+fa, ebp
0000091d: db 0xff
0000091e: jmpf mptp
00000920: stos ?
00000921: inc ebx
00000922: add bh, al
00000924: test [bx+si]+fa, esi
00000927: db 0xff
00000928: jmp esp
0000092a: stos ?
0000092b: inc ebx
0000092c: add bh, al
0000092e: test [bx+si]+fa, edi
00000931: db 0xff
00000932: jmp eax
00000934: stos ?
00000935: inc ebx
00000936: add [bx+si]+6a, bl
00000939: sub esp, [bp]+89
0000093c: test [si]+fa, edi
0000093f: db 0xff
00000940: callf mptp
00000942: push 0x2c
00000944: db 0x66
00000945: mov [di]+fa84, eax
00000949: db 0xff
0000094a: callf mptp
0000094c: push 0x2d
0000094e: db 0x66
0000094f: mov [di]+fa8c, eax
00000953: db 0xff
00000954: callf mptp
00000956: push 0x2f
00000958: db 0x66
00000959: mov [di]+fa94, eax
0000095d: db 0xff
0000095e: callf mptp
00000960: push 0x31
00000962: db 0x66
00000963: mov [di]+fa9c, eax
00000967: db 0xff
00000968: callf mptp
0000096a: push 0x32
0000096c: db 0x66
0000096d: mov [di]+faa4, eax
00000971: db 0xff
00000972: callf mptp
00000974: push 0x34
00000976: db 0x66
00000977: mov [di]+faac, eax
0000097b: db 0xff
0000097c: callf mptp
0000097e: push 0x35
00000980: db 0x66
00000981: mov [di]+fab4, eax
00000985: db 0xff
00000986: callf mptp
00000988: push 0x36
0000098a: db 0x66
0000098b: mov [di]+fabc, eax
0000098f: db 0xff
00000990: callf mptp
00000992: push 0x37
00000994: db 0x66
00000995: mov [di]+fac4, eax
00000999: db 0xff
0000099a: callf mptp
0000099c: push 0x38
0000099e: db 0x66
0000099f: mov [di]+facc, eax
000009a3: db 0xff
000009a4: callf mptp
000009a6: push 0x39
000009a8: db 0x66
000009a9: mov [di]+fad4, eax
000009ad: db 0xff
000009ae: callf mptp
000009b0: push 0x3a
000009b2: db 0x66
000009b3: mov [di]+fadc, eax
000009b7: db 0xff
000009b8: callf mptp
000009ba: push 0x3c
000009bc: db 0x66
000009bd: mov [di]+fae4, eax
000009c1: db 0xff
000009c2: callf mptp
000009c4: push 0x3d
000009c6: db 0x66
000009c7: mov [di]+faec, eax
000009cb: db 0xff
000009cc: callf mptp
000009ce: push 0x3e
000009d0: db 0x66
000009d1: mov [di]+faf4, eax
000009d5: db 0xff
000009d6: callf mptp
000009d8: push 0x3f
000009da: db 0x66
000009db: mov [di]+fafc, eax
000009df: db 0xff
000009e0: callf mptp
000009e2: push 0x40
000009e4: db 0x66
000009e5: mov [di]+fb04, eax
000009e9: db 0xff
000009ea: callf mptp
000009ec: push 0x41
000009ee: db 0x66
000009ef: mov [di]+fb0c, eax
000009f3: db 0xff
000009f4: callf mptp
000009f6: mov ecx, 0x0043aadc
000009fb: push 0x43
000009fd: db 0x66
000009fe: mov [di]+fb14, eax
00000a02: db 0xff
00000a03: inc edi
00000a05: test [bx+si]+fffa, eax
00000a09: callf mptp
00000a0b: stos ?
00000a0c: inc ebx
00000a0d: add bh, al
00000a0f: test [bx+si]+fffa, ecx
00000a13: call esp
00000a15: stos ?
00000a16: inc ebx
00000a17: add bh, al
00000a19: test [bx+si]+fffa, edx
00000a1d: call eax
00000a1f: stos ?
00000a20: inc ebx
00000a21: add bh, al
00000a23: test [bx+si]+fffa, ebx
00000a27: dec esp
00000a29: stos ?
00000a2a: inc ebx
00000a2b: add bh, al
00000a2d: test [bx+si]+fffa, esp
00000a31: dec eax
00000a33: stos ?
00000a34: inc ebx
00000a35: add bh, al
00000a37: test [bx+si]+fffa, ebp
00000a3b: inc esp
00000a3d: stos ?
00000a3e: inc ebx
00000a3f: add bh, al
00000a41: test [bx+si]+fffa, esi
00000a45: inc eax
00000a47: stos ?
00000a48: inc ebx
00000a49: add bh, al
00000a4b: test [bx+si]+fffa, edi
00000a4f: db 0xff
00000a50: mov esp, 0xc70043aa
00000a55: test eax, eax
00000a57: cli
00000a58: db 0xff
00000a59: db 0xff
00000a5a: mov eax, 0xc70043aa
00000a5f: test eax, ecx
00000a61: cli
00000a62: db 0xff
00000a63: push [si]+43aa
00000a67: add bh, al
00000a69: test eax, edx
00000a6b: cli
00000a6c: db 0xff
00000a6d: push [bx+si]+43aa
00000a71: add bh, al
00000a73: test eax, ebx
00000a75: cli
00000a76: db 0xff
00000a77: jmpf mptp
00000a79: stos ?
00000a7a: inc ebx
00000a7b: add bh, al
00000a7d: test eax, esp
00000a7f: cli
00000a80: db 0xff
00000a81: jmpf mptp
00000a83: stos ?
00000a84: inc ebx
00000a85: add bh, al
00000a87: test eax, ebp
00000a89: cli
00000a8a: db 0xff
00000a8b: jmp [si]+43aa
00000a8f: add bh, al
00000a91: test eax, esi
00000a93: cli
00000a94: db 0xff
00000a95: jmp [bx+si]+43aa
00000a99: add [bx+di]+f88d, cl
00000a9d: cli
00000a9e: db 0xff
00000a9f: inc edi
00000aa1: test [bx+si], eax
00000aa3: sti
00000aa4: db 0xff
00000aa5: callf mptp
00000aa7: stos ?
00000aa8: inc ebx
00000aa9: add bh, al
00000aab: test [bx+si], ecx
00000aad: sti
00000aae: db 0xff
00000aaf: callf mptp
00000ab1: stos ?
00000ab2: inc ebx
00000ab3: add bh, al
00000ab5: test [bx+si], edx
00000ab7: sti
00000ab8: db 0xff
00000ab9: call [si]+43aa
00000abd: add bh, al
00000abf: test [bx+si], ebx
00000ac1: sti
00000ac2: db 0xff
00000ac3: call [bx+si]+43aa
00000ac7: add [bx+si]+66, bl
00000aca: mov [di]+fb1c, eax
00000ace: db 0xff
00000acf: jmpf mptp
00000ad1: inc esp
00000ad2: pop eax
00000ad3: db 0x66
00000ad4: mov [di]+fb24, eax
00000ad8: db 0xff
00000ad9: jmpf mptp
00000adb: inc esi
00000adc: pop eax
00000add: db 0x66
00000ade: mov [di]+fb2c, eax
00000ae2: db 0xff
00000ae3: jmpf mptp
00000ae5: inc edi
00000ae6: pop eax
00000ae7: db 0x66
00000ae8: mov [di]+fb34, eax
00000aec: db 0xff
00000aed: jmpf mptp
00000aef: dec ecx
00000af0: pop eax
00000af1: db 0x66
00000af2: mov [di]+fb3c, eax
00000af6: db 0xff
00000af7: jmpf mptp
00000af9: dec edx
00000afa: pop eax
00000afb: db 0x66
00000afc: mov [di]+fb44, eax
00000b00: db 0xff
00000b01: jmpf mptp
00000b03: dec ebx
00000b04: pop eax
00000b05: db 0x66
00000b06: mov [di]+fb4c, eax
00000b0a: db 0xff
00000b0b: jmpf mptp
00000b0d: dec esi
00000b0e: pop eax
00000b0f: db 0x66
00000b10: mov [di]+fb54, eax
00000b14: db 0xff
00000b15: jmpf mptp
00000b17: dec edi
00000b18: pop eax
00000b19: db 0x66
00000b1a: mov [di]+fb5c, eax
00000b1e: db 0xff
00000b1f: jmpf mptp
00000b21: push eax
00000b22: pop eax
00000b23: db 0x66
00000b24: mov [di]+fb64, eax
00000b28: db 0xff
00000b29: jmpf mptp
00000b2b: push esi
00000b2c: pop eax
00000b2d: db 0x66
00000b2e: mov [di]+fb6c, eax
00000b32: db 0xff
00000b33: db 0xff
00000b34: mov eax, 0x00000401
00000b39: db 0x66
00000b3a: mov [di]+fb74, eax
00000b3e: db 0xff
00000b3f: inc [bx+si]+66
00000b42: mov [di]+fb7c, eax
00000b46: db 0xff
00000b47: db 0xff
00000b48: mov eax, 0x00000403
00000b4d: db 0x66
00000b4e: mov [di]+fb84, eax
00000b52: db 0xff
00000b53: inc [bx+si]+66
00000b56: mov [di]+fb8c, eax
00000b5a: db 0xff
00000b5b: db 0xff
00000b5c: mov eax, 0x00000405
00000b61: db 0x66
00000b62: mov [di]+fb94, eax
00000b66: db 0xff
00000b67: inc [bx+si]+66
00000b6a: mov [di]+fb9c, eax
00000b6e: db 0xff
00000b6f: db 0xff
00000b70: mov eax, 0x00000407
00000b75: db 0x66
00000b76: mov [di]+fba4, eax
00000b7a: db 0xff
00000b7b: inc [bx+si]+66
00000b7e: mov [di]+fbac, eax
00000b82: db 0xff
00000b83: db 0xff
00000b84: mov eax, 0x00000409
00000b89: db 0x66
00000b8a: mov [di]+fbb4, eax
00000b8e: db 0xff
00000b8f: inc [bx+si]+66
00000b92: mov [di]+fbbc, eax
00000b96: db 0xff
00000b97: db 0xff
00000b98: mov eax, 0x0000040b
00000b9d: db 0x66
00000b9e: mov [di]+fbc4, eax
00000ba2: db 0xff
00000ba3: inc [bx+si]+bf
00000ba6: mov [bp+si]+0043, ?
00000baa: mov esi, 0x0043aa84
00000baf: db 0x66
00000bb0: mov [di]+fbcc, eax
00000bb4: db 0xff
00000bb5: inc edi
00000bb7: test [bx+si], esp
00000bb9: sti
00000bba: db 0xff
00000bbb: inc [bx+si]+43aa
00000bbf: add [bx+di]+28bd, cl
00000bc3: sti
00000bc4: db 0xff
00000bc5: inc edi
00000bc7: test [bx+si], esi
00000bc9: sti
00000bca: db 0xff
00000bcb: db 0xff
00000bcc: jl -86 ; b76
00000bce: inc ebx
00000bcf: add bh, al
00000bd1: test [bx+si], edi
00000bd3: sti
00000bd4: db 0xff
00000bd5: db 0xff
00000bd6: js -86 ; b80
00000bd8: inc ebx
00000bd9: add bh, al
00000bdb: test [bx+si]+fb, eax
00000bde: db 0xff
00000bdf: push [si]+aa
00000be2: inc ebx
00000be3: add bh, al
00000be5: test [bx+si]+fb, ecx
00000be8: db 0xff
00000be9: push [bx+si]+aa
00000bec: inc ebx
00000bed: add bh, al
00000bef: test [bx+si]+fb, edx
00000bf2: db 0xff
00000bf3: jmpf mptp
00000bf5: stos ?
00000bf6: inc ebx
00000bf7: add bh, al
00000bf9: test [bx+si]+fb, ebx
00000bfc: db 0xff
00000bfd: jmpf mptp
00000bff: stos ?
00000c00: inc ebx
00000c01: add bh, al
00000c03: test [bx+si]+fb, esp
00000c06: db 0xff
00000c07: jmp [si]+aa
00000c0a: inc ebx
00000c0b: add bh, al
00000c0d: test [bx+si]+fb, ebp
00000c10: db 0xff
00000c11: jmp [bx+si]+aa
00000c14: inc ebx
00000c15: add bh, al
00000c17: test [bx+si]+fb, esi
00000c1a: db 0xff
00000c1b: callf mptp
00000c1d: stos ?
00000c1e: inc ebx
00000c1f: add bh, al
00000c21: test [bx+si]+fb, edi
00000c24: db 0xff
00000c25: call [si]+aa
00000c28: inc ebx
00000c29: add bh, al
00000c2b: test [bx+si]+fffb, eax
00000c2f: dec [si]+aa
00000c32: inc ebx
00000c33: add bh, al
00000c35: test [bx+si]+fffb, ecx
00000c39: inc [si]+aa
00000c3c: inc ebx
00000c3d: add bh, al
00000c3f: test [bx+si]+fffb, edx
00000c43: db 0xff
00000c44: cmp al, 0xaa
00000c46: inc ebx
00000c47: add bh, al
00000c49: test [bx+si]+fffb, ebx
00000c4d: push [si]
00000c4f: stos ?
00000c50: inc ebx
00000c51: add bh, al
00000c53: test [bx+si]+fffb, esp
00000c57: jmpf mptp
00000c59: stos ?
00000c5a: inc ebx
00000c5b: add bh, al
00000c5d: test [bx+si]+fffb, ebp
00000c61: jmp [si]
00000c63: stos ?
00000c64: inc ebx
00000c65: add bh, al
00000c67: test [bx+si]+fffb, esi
00000c6b: callf mptp
00000c6d: stos ?
00000c6e: inc ebx
00000c6f: add bh, al
00000c71: test [bx+si]+fffb, edi
00000c75: call [si]
00000c77: stos ?
00000c78: inc ebx
00000c79: add [bx+di]+c0b5, cl
00000c7d: sti
00000c7e: db 0xff
00000c7f: inc edi
00000c81: test eax, ecx
00000c83: sti
00000c84: db 0xff
00000c85: dec [si]
00000c87: stos ?
00000c88: inc ebx
00000c89: add bh, al
00000c8b: test eax, edx
00000c8d: sti
00000c8e: db 0xff
00000c8f: inc [si]
00000c91: stos ?
00000c92: inc ebx
00000c93: add [bx+si]+040d, bh
00000c97: add [bx+si], al
00000c99: db 0x66
00000c9a: mov [di]+fbd4, eax
00000c9e: db 0xff
00000c9f: inc [bx+si]+66
00000ca2: mov [di]+fbdc, eax
00000ca6: db 0xff
00000ca7: db 0xff
00000ca8: mov eax, 0x0000040f
00000cad: db 0x66
00000cae: mov [di]+fbe4, eax
00000cb2: db 0xff
00000cb3: inc [bx+si]+66
00000cb6: mov [di]+fbec, eax
00000cba: db 0xff
00000cbb: db 0xff
00000cbc: mov eax, 0x00000411
00000cc1: mov edx, 0x00000413
00000cc6: db 0x66
00000cc7: mov [di]+fc04, edx
00000ccb: db 0xff
00000ccc: jmp [bp]+89
00000ccf: test esp, esi
00000cd1: sti
00000cd2: db 0xff
00000cd3: inc [bx+si]+42
00000cd6: db 0x66
00000cd7: mov [di]+fc0c, edx
00000cdb: db 0xff
00000cdc: db 0xff
00000cdd: mov edx, 0x00000415
00000ce2: db 0x66
00000ce3: mov [di]+fc14, edx
00000ce7: db 0xff
00000ce8: inc [bp+si]+66
00000ceb: mov [di]+fc1c, edx
00000cef: db 0xff
00000cf0: db 0xff
00000cf1: mov edx, 0x00000417
00000cf6: db 0x66
00000cf7: mov [di]+fc24, edx
00000cfb: db 0xff
00000cfc: inc [bp+si]+66
00000cff: mov [di]+fc2c, edx
00000d03: db 0xff
00000d04: db 0xff
00000d05: mov edx, 0x00000419
00000d0a: db 0x66
00000d0b: mov [di]+fc34, edx
00000d0f: db 0xff
00000d10: inc [bp+si]+66
00000d13: mov [di]+fc3c, edx
00000d17: db 0xff
00000d18: db 0xff
00000d19: mov edx, 0x0000041b
00000d1e: db 0x66
00000d1f: mov [di]+fc44, edx
00000d23: db 0xff
00000d24: inc [bp+si]+66
00000d27: mov [di]+fc4c, edx
00000d2b: db 0xff
00000d2c: db 0xff
00000d2d: mov edx, 0x0000041d
00000d32: db 0x66
00000d33: mov [di]+fc54, edx
00000d37: db 0xff
00000d38: inc [bp+si]+66
00000d3b: mov [di]+fc5c, edx
00000d3f: db 0xff
00000d40: db 0xff
00000d41: mov edx, 0x0000041f
00000d46: db 0x66
00000d47: mov [di]+fc64, edx
00000d4b: db 0xff
00000d4c: inc [bp+si]+66
00000d4f: mov [di]+fc6c, edx
00000d53: db 0xff
00000d54: db 0xff
00000d55: mov edx, 0x00000421
00000d5a: db 0x66
00000d5b: mov [di]+fc74, edx
00000d5f: db 0xff
00000d60: inc [bp+si]+66
00000d63: mov [di]+fc7c, edx
00000d67: db 0xff
00000d68: db 0xff
00000d69: mov edx, 0x00000423
00000d6e: db 0x66
00000d6f: mov [di]+fc84, edx
00000d73: db 0xff
00000d74: inc [bp+si]+66
00000d77: mov [di]+fc8c, edx
00000d7b: db 0xff
00000d7c: db 0xff
00000d7d: mov edx, 0x00000425
00000d82: db 0x66
00000d83: mov [di]+fc94, edx
00000d87: db 0xff
00000d88: inc [bp+si]+66
00000d8b: mov [di]+fbfc, eax
00000d8f: db 0xff
00000d90: jmp [bp]+89
00000d93: xchg ebp, eax
00000d94: pushf
00000d95: cld
00000d96: db 0xff
00000d97: db 0xff
00000d98: mov eax, 0x0043a9fc
00000d9d: mov edx, 0x00000427
00000da2: mov [di]+fbd8, 0xa9f4ffff
00000daa: inc ebx
00000dab: add bh, al
00000dad: test eax, esp
00000daf: sti
00000db0: db 0xff
00000db1: jmpf mptp
00000db3: test eax, 0x85c70043
00000db8: call jvds
00000db9: sti
00000dba: db 0xff
00000dbb: jmp esp
00000dbd: test eax, 0x85c70043
00000dc2: lock
00000dc3: sti
00000dc4: db 0xff
00000dc5: callf mptp
00000dc7: test eax, 0x85c70043
00000dcc: clc
00000dcd: sti
00000dce: db 0xff
00000dcf: call esp
00000dd1: test eax, 0x85890043
00000dd6: add ah, bh
00000dd8: db 0xff
00000dd9: inc edi
00000ddb: test [bx+si], ecx
00000ddd: cld
00000dde: db 0xff
00000ddf: dec esp
00000de1: test eax, 0x85c70043
00000de6: adc ah, bh
00000de8: db 0xff
00000de9: inc esp
00000deb: test eax, 0x85c70043
00000df0: sbb ah, bh
00000df2: db 0xff
00000df3: db 0xff
00000df4: mov esp, 0xc70043a9
00000df9: test [bx+si], esp
00000dfb: cld
00000dfc: db 0xff
00000dfd: push [si]+43a9
00000e01: add bh, al
00000e03: test [bx+si], ebp
00000e05: cld
00000e06: db 0xff
00000e07: jmpf mptp
00000e09: test eax, 0x85c70043
00000e0e: xor ah, bh
00000e10: db 0xff
00000e11: jmp [si]+43a9
00000e15: add bh, al
00000e17: test [bx+si], edi
00000e19: cld
00000e1a: db 0xff
00000e1b: callf mptp
00000e1d: test eax, 0x85c70043
00000e22: inc eax
00000e23: cld
00000e24: db 0xff
00000e25: call [si]+43a9
00000e29: add bh, al
00000e2b: test [bx+si]+fc, ecx
00000e2e: db 0xff
00000e2f: dec [si]+43a9
00000e33: add bh, al
00000e35: test [bx+si]+fc, edx
00000e38: db 0xff
00000e39: inc [si]+43a9
00000e3d: add bh, al
00000e3f: test [bx+si]+fc, ebx
00000e42: db 0xff
00000e43: db 0xff
00000e44: jl -87 ; ded
00000e46: inc ebx
00000e47: add bh, al
00000e49: test [bx+si]+fc, esp
00000e4c: db 0xff
00000e4d: push [si]+a9
00000e50: inc ebx
00000e51: add bh, al
00000e53: test [bx+si]+fc, ebp
00000e56: db 0xff
00000e57: jmpf mptp
00000e59: test eax, 0x85c70043
00000e5e: jo -4 ; e5a
00000e60: db 0xff
00000e61: jmp [si]+a9
00000e64: inc ebx
00000e65: add bh, al
00000e67: test [bx+si]+fc, edi
00000e6a: db 0xff
00000e6b: callf mptp
00000e6d: test eax, 0x85c70043
00000e72: cmp ah, 0xff
00000e75: call [si]+a9
00000e78: inc ebx
00000e79: add bh, al
00000e7b: test [bx+si]+fffc, ecx
00000e7f: dec [si]+a9
00000e82: inc ebx
00000e83: add bh, al
00000e85: test [bx+si]+fffc, edx
00000e89: inc [si]+a9
00000e8c: inc ebx
00000e8d: add bh, al
00000e8f: test [bx+si]+fffc, ebx
00000e93: db 0xff
00000e94: cmp al, 0xa9
00000e96: inc ebx
00000e97: add bh, al
00000e99: test [bx+si]+fffc, esp
00000e9d: push [si]
00000e9f: test eax, 0x89660043
00000ea4: xchg ebp, eax
00000ea5: movs ?, ?
00000ea6: cld
00000ea7: db 0xff
00000ea8: inc edi
00000eaa: test [bx+si]+fffc, ebp
00000eae: jmpf mptp
00000eb0: test eax, 0xc2830043
00000eb5: add bh, [bp+di]+042d
00000eb9: add [bx+si], al
00000ebb: db 0x66
00000ebc: mov [di]+fccc, ebx
00000ec0: db 0xff
00000ec1: inc [bp+di]+02c3
00000ec5: db 0x66
00000ec6: mov [di]+fcd4, ebx
00000eca: db 0xff
00000ecb: jmp [bp]+89
00000ece: xchg ebp, eax
00000ecf: lods ?
00000ed0: cld
00000ed1: db 0xff
00000ed2: db 0xff
00000ed3: mov edx, 0x0000042a
00000ed8: db 0x66
00000ed9: mov [di]+fcb4, edx
00000edd: db 0xff
00000ede: inc [bp+si]+bb
00000ee1: xor [si], eax
00000ee3: add [bx+si], al
00000ee5: db 0x66
00000ee6: mov [di]+fcdc, ebx
00000eea: db 0xff
00000eeb: inc [bp+di]+66
00000eee: mov [di]+fce4, ebx
00000ef2: db 0xff
00000ef3: db 0xff
00000ef4: mov ebx, 0x00000434
00000ef9: db 0x66
00000efa: mov [di]+fcec, ebx
00000efe: db 0xff
00000eff: inc [bp+di]+66
00000f02: mov [di]+fcf4, ebx
00000f06: db 0xff
00000f07: db 0xff
00000f08: mov ebx, 0x00000436
00000f0d: db 0x66
00000f0e: mov [di]+fcfc, ebx
00000f12: db 0xff
00000f13: inc [bp+di]+66
00000f16: mov [di]+fd04, ebx
00000f1a: db 0xff
00000f1b: db 0xff
00000f1c: mov ebx, 0x00000438
00000f21: db 0x66
00000f22: mov [di]+fd0c, ebx
00000f26: db 0xff
00000f27: inc [bp+di]+66
00000f2a: mov [di]+fd14, ebx
00000f2e: db 0xff
00000f2f: db 0xff
00000f30: mov ebx, 0x0000043a
00000f35: db 0x66
00000f36: mov [di]+fd1c, ebx
00000f3a: db 0xff
00000f3b: inc [bp+di]+02c3
00000f3f: mov [di]+fd30, ecx
00000f43: db 0xff
00000f44: jmp [bp]+89
00000f47: popf
00000f48: and al, 0xfd
00000f4a: db 0xff
00000f4b: db 0xff
00000f4c: mov ebx, 0x0000043d
00000f51: lea ecx, ?
00000f53: add [bp]+89, esp
00000f56: lea esi, ?
00000f58: std
00000f59: db 0xff
00000f5a: inc [bx+di]+66
00000f5d: mov [di]+fd3c, ecx
00000f61: db 0xff
00000f62: dec [di]+034b
00000f66: db 0x66
00000f67: mov [di]+fd44, ecx
00000f6b: db 0xff
00000f6c: inc [bx+di]+89
00000f6f: mov ebp, 0xfffffd60
00000f74: db 0x66
00000f75: mov [di]+fd4c, ecx
00000f79: db 0xff
00000f7a: dec [di]+064b
00000f7e: mov edi, 0x00000446
00000f83: db 0x66
00000f84: mov [di]+fd64, edi
00000f88: db 0xff
00000f89: jmp [bp]+89
00000f8c: popf
00000f8d: sub al, 0xfd
00000f8f: db 0xff
00000f90: inc [bp+di]+07c3
00000f94: inc edi
00000f95: db 0x66
00000f96: mov [di]+fcbc, edx
00000f9a: db 0xff
00000f9b: db 0xff
00000f9c: mov edx, 0x0000042c
00000fa1: db 0x66
00000fa2: mov [di]+fd6c, edi
00000fa6: db 0xff
00000fa7: db 0xff
00000fa8: mov edi, 0x00000449
00000fad: db 0x66
00000fae: mov [di]+fcc4, edx
00000fb2: db 0xff
00000fb3: jmp [bp]+89
00000fb6: lea edx, ?
00000fb8: std
00000fb9: db 0xff
00000fba: db 0xff
00000fbb: mov edx, 0x0043a924
00000fc0: mov ecx, 0x0043a91c
00000fc5: db 0x66
00000fc6: mov [di]+fd74, edi
00000fca: db 0xff
00000fcb: inc edi
00000fcd: test [bx+si]+fffc, esi
00000fd1: call [si]
00000fd3: test eax, 0x85c70043
00000fd8: mov eax, 0x0cfffffc
00000fdd: test eax, 0x85c70043
00000fe2: sar ah, 0xff
00000fe5: inc [si]
00000fe7: test eax, 0x95890043
00000fec: enter 0xfffc, 0xff
00000ff0: mov [di]+fcd0, 0xa8fcffff
00000ff8: inc ebx
00000ff9: add bh, al
00000ffb: test eax, ebx
00000ffd: cld
00000ffe: db 0xff
00000fff: db 0xff
