0000000000000000: DEC
0000000000000001: LEA
0000000000000002: ADD
0000000000000003: db 0x91;
0000000000000004: POP
0000000000000005: MOV
0000000000000006: ADD
0000000000000007: JMP
0000000000000008: CMP
0000000000000009: db 0x94;
000000000000000a: ADD
000000000000000b: MOV
000000000000000c: db 0x5c;
000000000000000d: AND
000000000000000e: CMP
000000000000000f: IN
0000000000000010: AND
0000000000000011: DEC
0000000000000012: LEA
0000000000000013: ADD
0000000000000014: JA
0000000000000015: POP
0000000000000016: ADD
0000000000000017: ADD
0000000000000018: MOV
0000000000000019: FIDIVR
000000000000001a: DEC
000000000000001b: MOV
000000000000001c: STC
000000000000001d: DEC
000000000000001e: MOV
000000000000001f: ADD
0000000000000020: CALL
0000000000000021: PUSH
0000000000000022: db 0x94;
0000000000000023: ADD
0000000000000024: ADD
0000000000000025: JE
0000000000000026: OR
0000000000000027: DEC
0000000000000028: MOV
0000000000000029: IRETD
000000000000002a: CALL
000000000000002b: ADX
000000000000002c: db 0x94;
000000000000002d: ADD
000000000000002e: MOV
000000000000002f: DEC
0000000000000030: MOV
0000000000000031: db 0x5c;
0000000000000032: AND
0000000000000033: LES
0000000000000034: AND
0000000000000035: db 0x5f;
0000000000000036: RETN
0000000000000037: MOV
0000000000000038: ADD
0000000000000039: OUTSB
000000000000003a: db 0x54;
000000000000003b: PUSH
000000000000003c: DEC
000000000000003d: MOV
000000000000003e: db 0x5c;
000000000000003f: AND
0000000000000040: CMP
0000000000000041: IN
0000000000000042: INC
0000000000000043: CALL
0000000000000044: FNSTCW
0000000000000045: db 0x57;
0000000000000046: ADD
0000000000000047: ALTER
0000000000000048: AND
0000000000000049: XOR
000000000000004a: ADD
000000000000004b: db 0x41;
000000000000004c: MOV
000000000000004d: ADD
000000000000004e: db 0x45;
000000000000004f: XOR
0000000000000050: ADD
0000000000000051: ADD
0000000000000052: CMP
0000000000000053: DEC
0000000000000054: MOV
0000000000000055: ENTER
0000000000000056: MOV
0000000000000057: db 0x44;
0000000000000058: AND
0000000000000059: ADD
000000000000005a: ADD
000000000000005b: db 0x44;
000000000000005c: MOV
000000000000005d: PUSH
000000000000005e: ADC
000000000000005f: AND
0000000000000060: db 0x52;
0000000000000061: ADD
0000000000000062: CLC
0000000000000063: DEC
0000000000000064: TEST
0000000000000065: SAR
0000000000000066: JE
0000000000000067: PUSH
0000000000000068: DEC
0000000000000069: CMP
000000000000006a: CLC
000000000000006b: PUSH
000000000000006c: JNE
000000000000006d: NTAKEN
000000000000006e: PUSH
000000000000006f: ADC
0000000000000070: POP
0000000000000071: db 0x52;
0000000000000072: ADD
0000000000000073: CALL
0000000000000074: db 0x94, 0x57;
0000000000000076: ADD
0000000000000077: OR
0000000000000078: XOR
0000000000000079: POP
000000000000007a: ADD
000000000000007b: ADD
000000000000007c: db 0x44;
000000000000007d: MOV
000000000000007e: XLATB
000000000000007f: db 0x4c;
0000000000000080: MOV
0000000000000081: HLT
0000000000000082: ADD
0000000000000083: ADD
0000000000000084: DEC
0000000000000085: LEA
0000000000000086: OR
0000000000000087: IN
0000000000000088: db 0x57;
0000000000000089: ADD
000000000000008a: TAKEN
000000000000008b: ADD
000000000000008c: ADD
000000000000008d: DEC
000000000000008e: MOV
000000000000008f: MOV
0000000000000090: DEC
0000000000000091: MOV
0000000000000092: db 0x5c;
0000000000000093: AND
0000000000000094: LES
0000000000000095: INC
0000000000000096: db 0x5f;
0000000000000097: RETN
0000000000000098: DEC
0000000000000099: CMP
000000000000009a: IN
000000000000009b: AND
000000000000009c: DEC
000000000000009d: MOV
000000000000009e: FNSTCW
000000000000009f: db 0xb9;
00000000000000a0: ADD
00000000000000a1: CALL
00000000000000a2: IMUL
00000000000000a3: POP
00000000000000a4: ADD
00000000000000a5: ADD
00000000000000a6: db 0x41;
00000000000000a7: MOV
00000000000000a8: ADD
00000000000000a9: DEC
00000000000000aa: MOV
00000000000000ab: SAR
00000000000000ac: DEC
00000000000000ad: MOV
00000000000000ae: ENTER
00000000000000af: DEC
00000000000000b0: MOV
00000000000000b1: ADD
00000000000000b2: SAR
00000000000000b3: db 0x53;
00000000000000b4: PUSH
00000000000000b5: db 0x94;
00000000000000b6: ADD
00000000000000b7: ADD
00000000000000b8: MOV
00000000000000b9: db 0x53;
00000000000000ba: PUSH
00000000000000bb: RETF
00000000000000bc: MOV
00000000000000bd: INC
00000000000000be: ADD
00000000000000bf: ADD
00000000000000c0: CALL
00000000000000c1: PUSH
00000000000000c2: NOP
00000000000000c3: ADD
00000000000000c4: ADD
00000000000000c5: DEC
00000000000000c6: CMP
00000000000000c7: CLC
00000000000000c8: ADD
00000000000000c9: JNE
00000000000000ca: CMP
00000000000000cb: DEC
00000000000000cc: MOV
00000000000000cd: ADD
00000000000000ce: MOVSD
00000000000000cf: db 0x53;
00000000000000d0: PUSH
00000000000000d1: SAR
00000000000000d2: JNE
00000000000000d3: POP
00000000000000d4: LEA
00000000000000d5: DEC
00000000000000d6: ADD
00000000000000d7: CALL
00000000000000d8: AND
00000000000000d9: POP
00000000000000da: ADD
00000000000000db: ADD
00000000000000dc: DEC
00000000000000dd: MOV
00000000000000de: ADD
00000000000000df: db 0x91, 0x53;
00000000000000e1: PUSH
00000000000000e2: db 0x53;
00000000000000e3: ADD
00000000000000e4: ADD
00000000000000e5: ADD
00000000000000e6: ADD
00000000000000e7: DEC
00000000000000e8: MOV
00000000000000e9: ENTER
00000000000000ea: CALL
00000000000000eb: OUT
00000000000000ec: db 0x93;
00000000000000ed: ADD
00000000000000ee: SBB
00000000000000ef: JS
00000000000000f0: db 0x53;
00000000000000f1: PUSH
00000000000000f2: db 0x43;
00000000000000f3: ADD
00000000000000f4: LES
00000000000000f5: AND
00000000000000f6: db 0x5b;
00000000000000f7: RETN
00000000000000f8: IN
00000000000000f9: SUB
00000000000000fa: DEC
00000000000000fb: MOV
00000000000000fc: ADC
00000000000000fd: IMUL
00000000000000fe: db 0x53;
00000000000000ff: PUSH
0000000000000100: SAR
0000000000000101: JE
0000000000000102: OR
0000000000000103: CALL
0000000000000104: FISTP
0000000000000105: db 0x95;
0000000000000106: ADD
0000000000000107: JMP
0000000000000108: ADD
0000000000000109: XOR
000000000000010a: SAR
000000000000010b: DEC
000000000000010c: CMP
000000000000010d: LES
000000000000010e: SUB
000000000000010f: RETN
0000000000000110: DEC
0000000000000111: CMP
0000000000000112: IN
0000000000000113: SUB
0000000000000114: DEC
0000000000000115: MOV
0000000000000116: ADC
0000000000000117: db 0x41, 0x53;
0000000000000119: PUSH
000000000000011a: SAR
000000000000011b: JE
000000000000011c: OR
000000000000011d: CALL
000000000000011e: db 0xbf, 0x95;
0000000000000120: ADD
0000000000000121: JMP
0000000000000122: ADD
0000000000000123: XOR
0000000000000124: SAR
0000000000000125: DEC
0000000000000126: CMP
0000000000000127: LES
0000000000000128: SUB
0000000000000129: RETN
000000000000012a: DEC
000000000000012b: MOV
000000000000012c: db 0x5c;
000000000000012d: AND
000000000000012e: INSB
000000000000012f: AND
0000000000000130: ADC
0000000000000131: DEC
0000000000000132: MOV
0000000000000133: JE
0000000000000134: AND
0000000000000135: SBB
0000000000000136: db 0x57;
0000000000000137: DEC
0000000000000138: db 0x45;
0000000000000139: XOR
000000000000013a: SAR
000000000000013b: DEC
000000000000013c: MOV
000000000000013d: JMP
000000000000013e: db 0x41;
000000000000013f: LEA
0000000000000140: ADC
0000000000000141: CMC
0000000000000142: PUSH
0000000000000143: ADD
0000000000000144: ADD
0000000000000145: DEC
0000000000000146: MOV
0000000000000147: INT
0000000000000148: CALL
0000000000000149: OR
000000000000014a: db 0x41;
000000000000014b: ADD
000000000000014c: LEAVE
000000000000014d: db 0x45;
000000000000014e: XOR
000000000000014f: PUSH
0000000000000150: DEC
0000000000000151: MOV
0000000000000152: INT
0000000000000153: MOV
0000000000000154: LOCK
0000000000000155: PUSH
0000000000000156: ADC
0000000000000157: FNSTCW
0000000000000158: PUSH
0000000000000159: ADD
000000000000015a: ADD
000000000000015b: DEC
000000000000015c: MOV
000000000000015d: INT
000000000000015e: CALL
000000000000015f: db 0x49, 0x41;
0000000000000161: ADD
0000000000000162: OR
0000000000000163: LOOP
0000000000000164: db 0x57;
0000000000000165: ADD
0000000000000166: CLC
0000000000000167: MOV
0000000000000168: XLATB
0000000000000169: CALL
000000000000016a: HLT
000000000000016b: REP
000000000000016c: ADD
000000000000016d: ADD
000000000000016e: LEA
000000000000016f: db 0x56;
0000000000000170: ADC
0000000000000171: db 0x45;
0000000000000172: XOR
0000000000000173: INT
0000000000000174: PUSH
0000000000000175: ADC
0000000000000176: SCASB
0000000000000177: PUSH
0000000000000178: ADD
0000000000000179: ADD
000000000000017a: DEC
000000000000017b: MOV
000000000000017c: INT
000000000000017d: CALL
000000000000017e: PUSH
000000000000017f: db 0x41;
0000000000000180: ADD
0000000000000181: OR
0000000000000182: JA
0000000000000183: db 0x57;
0000000000000184: ADD
0000000000000185: FDIVR
0000000000000186: MOV
0000000000000187: SAR
0000000000000188: CALL
0000000000000189: LEAVE
000000000000018a: REP
000000000000018b: ADD
000000000000018c: ADD
000000000000018d: LEA
000000000000018e: ADD
000000000000018f: db 0xbf;
0000000000000190: LEA
0000000000000191: db 0x5c;
0000000000000192: XOR
0000000000000193: OR
0000000000000194: AND
0000000000000195: db 0x57;
0000000000000196: ADD
0000000000000197: CALL
0000000000000198: db 0xb1;
0000000000000199: REP
000000000000019a: db 0x53;
000000000000019b: ADC
000000000000019c: db 0x45;
000000000000019d: XOR
000000000000019e: INT
000000000000019f: PUSH
00000000000001a0: ADC
00000000000001a1: IMUL
00000000000001a2: PUSH
00000000000001a3: ADD
00000000000001a4: ADD
00000000000001a5: DEC
00000000000001a6: MOV
00000000000001a7: INT
00000000000001a8: CALL
00000000000001a9: JG
00000000000001aa: INC
00000000000001ab: ADD
00000000000001ac: ADD
00000000000001ad: LEA
00000000000001ae: db 0x53;
00000000000001af: ADC
00000000000001b0: db 0x45;
00000000000001b1: XOR
00000000000001b2: INT
00000000000001b3: MOV
00000000000001b4: CLC
00000000000001b5: PUSH
00000000000001b6: ADC
00000000000001b7: db 0x4f;
00000000000001b8: PUSH
00000000000001b9: MOV
00000000000001ba: INT
00000000000001bb: CALL
00000000000001bc: ARPL
00000000000001bd: INC
00000000000001be: ADD
00000000000001bf: ADD
00000000000001c0: DEC
00000000000001c1: LEA
00000000000001c2: OR
00000000000001c3: CWDE
00000000000001c4: db 0x56;
00000000000001c5: ADD
00000000000001c6: db 0x44;
00000000000001c7: MOV
00000000000001c8: CALL
00000000000001c9: PUSH
00000000000001ca: REP
00000000000001cb: ADD
00000000000001cc: ADD
00000000000001cd: LEA
00000000000001ce: ADC
00000000000001cf: CMP
00000000000001d0: db 0x45;
00000000000001d1: XOR
00000000000001d2: SAR
00000000000001d3: DEC
00000000000001d4: MOV
00000000000001d5: INT
00000000000001d6: DEC
00000000000001d7: MOV
00000000000001d8: db 0x5c;
00000000000001d9: AND
00000000000001da: INSB
00000000000001db: AND
00000000000001dc: CMP
00000000000001dd: DEC
00000000000001de: MOV
00000000000001df: JE
00000000000001e0: AND
00000000000001e1: INC
00000000000001e2: DEC
00000000000001e3: CMP
00000000000001e4: LES
00000000000001e5: AND
00000000000001e6: db 0x5f;
00000000000001e7: DEC
00000000000001e8: PUSH
00000000000001e9: ADD
00000000000001ea: ADD
00000000000001eb: INT
00000000000001ec: INC
00000000000001ed: db 0x53, 0x55, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56;
00000000000001f7: MOV
00000000000001f8: ADD
00000000000001f9: CALL
00000000000001fa: LAHF
00000000000001fb: CMP
00000000000001fc: ADD
00000000000001fd: ADD
00000000000001fe: DEC
00000000000001ff: SUB
0000000000000200: LOOPNE
0000000000000201: DEC
0000000000000202: MOV
0000000000000203: ADD
0000000000000204: db 0x95;
0000000000000205: AAA
0000000000000206: XOR
0000000000000207: LES
0000000000000208: DEC
0000000000000209: MOV
000000000000020a: TEST
000000000000020b: AND
000000000000020c: MOV
000000000000020d: POP
000000000000020e: ADD
000000000000020f: ADD
0000000000000210: XOR
0000000000000211: PUSH
0000000000000212: db 0x41;
0000000000000213: MOV
0000000000000214: LOCK
0000000000000215: db 0x4c;
0000000000000216: MOV
0000000000000217: LOOPE
0000000000000218: db 0x4d;
0000000000000219: TEST
000000000000021a: TEST
000000000000021b: ADD
000000000000021c: ADD
000000000000021d: ADD
000000000000021e: db 0x41, 0xbe;
0000000000000220: JO
0000000000000221: db 0x44;
0000000000000222: MOV
0000000000000223: MOV
0000000000000224: db 0x4c;
0000000000000225: LEA
0000000000000226: db 0x44;
0000000000000227: SUB
0000000000000228: MOV
0000000000000229: DEC
000000000000022a: LEA
000000000000022b: db 0x54;
000000000000022c: AND
000000000000022d: MOV
000000000000022e: db 0x49;
000000000000022f: MOV
0000000000000230: db 0x4f;
0000000000000231: MOV
0000000000000232: AND
0000000000000233: AND
0000000000000234: ADD
0000000000000235: PUSH
0000000000000236: ADC
0000000000000237: TEST
0000000000000238: db 0x4f;
0000000000000239: ADD
000000000000023a: POP
000000000000023b: TEST
000000000000023c: db 0xb4;
000000000000023d: ADD
000000000000023e: db 0x4c;
000000000000023f: AND
0000000000000240: POP
0000000000000241: TEST
0000000000000242: TEST
0000000000000243: ADD
0000000000000244: ADD
0000000000000245: ADD
0000000000000246: INC
0000000000000247: TEST
0000000000000248: IN
0000000000000249: JE
000000000000024a: SBB
000000000000024b: TEST
000000000000024c: LEAVE
000000000000024d: JE
000000000000024e: ADC
000000000000024f: DEC
0000000000000250: LEA
0000000000000251: db 0x44;
0000000000000252: AND
0000000000000253: SAR
0000000000000254: CMP
0000000000000255: XOR
0000000000000256: MOV
0000000000000257: DEC
0000000000000258: PUSH
0000000000000259: SAR
000000000000025a: DEC
000000000000025b: CMP
000000000000025c: JMPF
000000000000025d: ADD
000000000000025e: JNE
000000000000025f: HLT
0000000000000260: XOR
0000000000000261: FSTP
0000000000000262: TEST
0000000000000263: LEAVE
0000000000000264: JE
0000000000000265: XOR
0000000000000266: DEC
0000000000000267: CMP
0000000000000268: ALTER
0000000000000269: AND
000000000000026a: AND
000000000000026b: ADD
000000000000026c: SUB
000000000000026d: RETF
000000000000026e: DEC
000000000000026f: ARPL
0000000000000270: RETN
0000000000000271: db 0x44;
0000000000000272: MOV
0000000000000273: db 0x54;
0000000000000274: ADD
0000000000000275: db 0x4c;
0000000000000276: AND
0000000000000277: INT
0000000000000278: PUSH
0000000000000279: ADC
000000000000027a: db 0x49, 0x4f;
000000000000027c: ADD
000000000000027d: JE
000000000000027e: TAKEN
000000000000027f: ADD
0000000000000280: db 0x5c;
0000000000000281: AND
0000000000000282: AND
0000000000000283: XOR
0000000000000284: CMP
0000000000000285: FNSTCW
0000000000000286: JC
0000000000000287: IRETD
0000000000000288: MOV
0000000000000289: SAR
000000000000028a: DEC
000000000000028b: ADD
000000000000028c: CLC
000000000000028d: DEC
000000000000028e: CMP
000000000000028f: DEC
0000000000000290: POP
0000000000000291: MOV
0000000000000292: db 0x5e;
0000000000000293: PUSH
0000000000000294: SAR
0000000000000295: DEC
0000000000000296: MOV
0000000000000297: MOV
0000000000000298: AND
0000000000000299: MOV
000000000000029a: POP
000000000000029b: ADD
000000000000029c: ADD
000000000000029d: DEC
000000000000029e: XOR
000000000000029f: INT
00000000000002a0: CALL
00000000000002a1: STC
00000000000002a2: db 0x94;
00000000000002a3: ADD
00000000000002a4: LES
00000000000002a5: SAR
00000000000002a6: POP
00000000000002a7: ADD
00000000000002a8: ADD
00000000000002a9: db 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5f, 0x5e, 0x5d, 0x5b;
00000000000002b3: RETN
00000000000002b4: db 0x4e;
00000000000002b5: ADD
00000000000002b6: AND
00000000000002b7: XOR
00000000000002b8: DEC
00000000000002b9: LEA
00000000000002ba: OR
00000000000002bb: OUTSB
00000000000002bc: db 0x56;
00000000000002bd: ADD
00000000000002be: db 0x44;
00000000000002bf: MOV
00000000000002c0: ICEBP
00000000000002c1: ADD
00000000000002c2: ADD
00000000000002c3: MOV
00000000000002c4: ADD
00000000000002c5: ADD
00000000000002c6: ADD
00000000000002c7: ADD
00000000000002c8: JMP
00000000000002c9: db 0xbc;
00000000000002ca: PUSH
00000000000002cb: ADD
00000000000002cc: ADD
00000000000002cd: MOV
00000000000002ce: db 0x54;
00000000000002cf: AND
00000000000002d0: OR
00000000000002d1: ADC
00000000000002d2: db 0x56;
00000000000002d3: ADD
00000000000002d4: SAR
00000000000002d5: db 0x4c;
00000000000002d6: MOV
00000000000002d7: ICEBP
00000000000002d8: ADD
00000000000002d9: ADD
00000000000002da: MOV
00000000000002db: ADD
00000000000002dc: ADD
00000000000002dd: ADD
00000000000002de: ADD
00000000000002df: JMP
00000000000002e0: CDQ
00000000000002e1: INT
00000000000002e2: INT
00000000000002e3: INC
00000000000002e4: db 0x53;
00000000000002e5: DEC
00000000000002e6: DEC
00000000000002e7: MOV
00000000000002e8: FNSTCW
00000000000002e9: CALL
00000000000002ea: db 0xbe;
00000000000002eb: POP
00000000000002ec: LEA
00000000000002ed: SBB
00000000000002ee: CMP
00000000000002ef: db 0x54;
00000000000002f0: ADD
00000000000002f1: SBB
00000000000002f2: DEC
00000000000002f3: MOV
00000000000002f4: RETN
00000000000002f5: DEC
00000000000002f6: CMP
00000000000002f7: LES
00000000000002f8: AND
00000000000002f9: db 0x5b;
00000000000002fa: RETN
00000000000002fb: DEC
00000000000002fc: MOV
00000000000002fd: db 0x5c;
00000000000002fe: AND
00000000000002ff: INSB
0000000000000300: AND
0000000000000301: ADC
0000000000000302: DEC
0000000000000303: MOV
0000000000000304: JE
0000000000000305: AND
0000000000000306: SBB
0000000000000307: db 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57;
0000000000000310: DEC
0000000000000311: OR
0000000000000312: ADD
0000000000000313: ADD
0000000000000314: db 0x4c;
0000000000000315: MOV
0000000000000316: ICEBP
0000000000000317: DEC
0000000000000318: LEA
0000000000000319: ADC
000000000000031a: MOVSB
000000000000031b: db 0x5c;
000000000000031c: ADD
000000000000031d: INTO
000000000000031e: CALL
000000000000031f: CLC
0000000000000320: db 0x92;
0000000000000321: ADD
0000000000000322: CMP
0000000000000323: db 0x4e;
0000000000000324: ADD
0000000000000325: db 0x44;
0000000000000326: MOV
0000000000000327: ADD
0000000000000328: db 0x44;
0000000000000329: MOV
000000000000032a: IDIV
000000000000032b: POP
000000000000032c: TEST
000000000000032d: RETF
000000000000032e: ADD
000000000000032f: ADD
0000000000000330: ADD
0000000000000331: DEC
0000000000000332: MOV
0000000000000333: db 0x4e;
0000000000000334: AND
0000000000000335: DEC
0000000000000336: MOV
0000000000000337: OUT
0000000000000338: DEC
0000000000000339: SUB
000000000000033a: db 0x4e;
000000000000033b: SBB
000000000000033c: ADD
000000000000033d: DEC
000000000000033e: CMP
000000000000033f: IRETD
0000000000000340: POP
0000000000000341: XCHG
0000000000000342: MOV
0000000000000343: ADD
0000000000000344: ADD
0000000000000345: ADD
0000000000000346: DEC
0000000000000347: CMP
0000000000000348: JMP
0000000000000349: JC
000000000000034a: ADD
000000000000034b: CALL
000000000000034c: LOOPE
000000000000034d: db 0x95;
000000000000034e: ADD
000000000000034f: db 0x4e;
0000000000000350: SBB
0000000000000351: PUSH
0000000000000352: db 0x5c;
0000000000000353: ADD
0000000000000354: OR
0000000000000355: JMP
0000000000000356: CALL
0000000000000357: IMUL
0000000000000358: db 0x97;
0000000000000359: ADD
000000000000035a: JNE
000000000000035b: ADD
000000000000035c: db 0x44;
000000000000035d: MOV
000000000000035e: DEC
000000000000035f: MOV
0000000000000360: db 0x46;
0000000000000361: AND
0000000000000362: SBB
0000000000000363: DEC
0000000000000364: SAR
0000000000000365: CLC
0000000000000366: ADD
0000000000000367: DEC
0000000000000368: CMP
0000000000000369: CALL
000000000000036a: JC
000000000000036b: ADD
000000000000036c: CALL
000000000000036d: SCASB
000000000000036e: db 0x95;
000000000000036f: ADD
0000000000000370: db 0x5e;
0000000000000371: SBB
0000000000000372: db 0x93, 0x5b;
0000000000000374: ADD
0000000000000375: db 0x97;
0000000000000376: ADD
0000000000000377: OR
0000000000000378: JMP
0000000000000379: DEC
000000000000037a: LEA
000000000000037b: ADC
000000000000037c: CMP
000000000000037d: db 0x5b;
000000000000037e: ADD
000000000000037f: SAR
0000000000000380: CALL
0000000000000381: FSTP
0000000000000382: db 0x96;
0000000000000383: ADD
0000000000000384: ADD
0000000000000385: ADD
0000000000000386: ADD
0000000000000387: IDIV
0000000000000388: FDIVR
0000000000000389: SBB
000000000000038a: LEAVE
000000000000038b: db 0x44;
000000000000038c: AND
000000000000038d: db 0x4e;
000000000000038e: AND
000000000000038f: DEC
0000000000000390: ADD
0000000000000391: JMP
0000000000000392: DEC
0000000000000393: SUB
0000000000000394: db 0x4e;
0000000000000395: SBB
0000000000000396: DEC
0000000000000397: SAR
0000000000000398: STC
0000000000000399: ADD
000000000000039a: DEC
000000000000039b: CMP
000000000000039c: SAR
000000000000039d: POP
000000000000039e: CMP
000000000000039f: JNA
00000000000003a0: PUSH
00000000000003a1: PUSH
00000000000003a2: PUSH
00000000000003a3: DEC
00000000000003a4: LEA
00000000000003a5: ADD
00000000000003a6: TAKEN
00000000000003a7: db 0x5b;
00000000000003a8: ADD
00000000000003a9: ADC
00000000000003aa: DAS
00000000000003ab: db 0x5b;
00000000000003ac: ADD
00000000000003ad: OUT
00000000000003ae: DEC
00000000000003af: LEA
00000000000003b0: OR
00000000000003b1: LOOPE
00000000000003b2: db 0x5a;
00000000000003b3: ADD
00000000000003b4: db 0x45;
00000000000003b5: SAR
00000000000003b6: ADD
00000000000003b7: ADD
00000000000003b8: db 0x44;
00000000000003b9: CMP
00000000000003ba: DEC
00000000000003bb: LEA
00000000000003bc: OR
00000000000003bd: db 0xbc, 0x5a;
00000000000003bf: ADD
00000000000003c0: MOV
00000000000003c1: db 0x4d;
00000000000003c2: ADD
00000000000003c3: MOV
00000000000003c4: JE
00000000000003c5: SBB
00000000000003c6: DEC
00000000000003c7: LEA
00000000000003c8: ADC
00000000000003c9: MOV
00000000000003ca: db 0x5a;
00000000000003cb: ADD
00000000000003cc: ENTER
00000000000003cd: PUSH
00000000000003ce: ADC
00000000000003cf: JNO
00000000000003d0: db 0x4d;
00000000000003d1: ADD
00000000000003d2: MOV
00000000000003d3: JE
00000000000003d4: PUSH
00000000000003d5: PUSH
00000000000003d6: SAR
00000000000003d7: db 0x66, 0x44;
00000000000003d9: MOV
00000000000003da: ADD
00000000000003db: db 0x67, 0x5a;
00000000000003dd: ADD
00000000000003de: ADD
00000000000003df: ADD
00000000000003e0: ADD
00000000000003e1: db 0x4c;
00000000000003e2: LEA
00000000000003e3: ADD
00000000000003e4: ADD
00000000000003e5: DEC
00000000000003e6: MOV
00000000000003e7: db 0x44;
00000000000003e8: AND
00000000000003e9: ADD
00000000000003ea: ADD
00000000000003eb: ADD
00000000000003ec: db 0x66;
00000000000003ed: MOV
00000000000003ee: db 0x66;
00000000000003ef: MOV
00000000000003f0: DEC
00000000000003f1: LEA
00000000000003f2: ADD
00000000000003f3: CMP
00000000000003f4: db 0x5a;
00000000000003f5: ADD
00000000000003f6: MOVSB
00000000000003f7: AND
00000000000003f8: TEST
00000000000003f9: ADD
00000000000003fa: ADD
00000000000003fb: ADD
00000000000003fc: DEC
00000000000003fd: MOV
00000000000003fe: db 0x44;
00000000000003ff: AND
0000000000000400: ADD
0000000000000401: ADD
0000000000000402: ADD
0000000000000403: db 0x66;
0000000000000404: MOV
0000000000000405: ADD
0000000000000406: ADD
0000000000000407: ADD
0000000000000408: db 0x66;
0000000000000409: MOV
000000000000040a: DEC
000000000000040b: LEA
000000000000040c: ADD
000000000000040d: ADC
000000000000040e: db 0x5a;
000000000000040f: ADD
0000000000000410: db 0x44;
0000000000000411: AND
0000000000000412: ADD
0000000000000413: ADD
0000000000000414: ADD
0000000000000415: db 0x66;
0000000000000416: MOV
0000000000000417: DEC
0000000000000418: LEA
0000000000000419: ADD
000000000000041a: CLC
000000000000041b: db 0x59;
000000000000041c: ADD
000000000000041d: db 0x44;
000000000000041e: AND
000000000000041f: ADD
0000000000000420: ADD
0000000000000421: ADD
0000000000000422: db 0x66;
0000000000000423: MOV
0000000000000424: DEC
0000000000000425: LEA
0000000000000426: ADD
0000000000000427: FDIVP
0000000000000428: db 0x59;
0000000000000429: ADD
000000000000042a: db 0x44;
000000000000042b: AND
000000000000042c: ADD
000000000000042d: ADD
000000000000042e: ADD
000000000000042f: db 0x66;
0000000000000430: MOV
0000000000000431: DEC
0000000000000432: LEA
0000000000000433: ADD
0000000000000434: LES
0000000000000435: db 0x59;
0000000000000436: ADD
0000000000000437: db 0x44;
0000000000000438: AND
0000000000000439: ADD
000000000000043a: ADD
000000000000043b: ADD
000000000000043c: db 0x66;
000000000000043d: MOV
000000000000043e: ADD
000000000000043f: ADD
0000000000000440: ADD
0000000000000441: DEC
0000000000000442: LEA
0000000000000443: ADD
0000000000000444: CMPSD
0000000000000445: db 0x59;
0000000000000446: ADD
0000000000000447: TEST
0000000000000448: AND
0000000000000449: MOV
000000000000044a: ADD
000000000000044b: ADD
000000000000044c: ADD
000000000000044d: MOV
000000000000044e: OR
000000000000044f: ADD
0000000000000450: ADD
0000000000000451: ADD
0000000000000452: db 0x66;
0000000000000453: MOV
0000000000000454: ADD
0000000000000455: ADD
0000000000000456: ADD
0000000000000457: DEC
0000000000000458: LEA
0000000000000459: ADD
000000000000045a: XCHG
000000000000045b: db 0x59;
000000000000045c: ADD
000000000000045d: TEST
000000000000045e: AND
000000000000045f: CWDE
0000000000000460: ADD
0000000000000461: ADD
0000000000000462: ADD
0000000000000463: MOV
0000000000000464: OR
0000000000000465: ADD
0000000000000466: ADD
0000000000000467: ADD
0000000000000468: db 0x66;
0000000000000469: MOV
000000000000046a: ADD
000000000000046b: ADD
000000000000046c: ADD
000000000000046d: MOV
000000000000046e: OR
000000000000046f: ADD
0000000000000470: ADD
0000000000000471: ADD
0000000000000472: db 0x66;
0000000000000473: MOV
0000000000000474: ADD
0000000000000475: ADD
0000000000000476: ADD
0000000000000477: DEC
0000000000000478: LEA
0000000000000479: ADD
000000000000047a: db 0x5a, 0x59;
000000000000047c: ADD
000000000000047d: TEST
000000000000047e: AND
000000000000047f: MOV
0000000000000480: ADD
0000000000000481: ADD
0000000000000482: ADD
0000000000000483: MOV
0000000000000484: OR
0000000000000485: ADD
0000000000000486: ADD
0000000000000487: ADD
0000000000000488: db 0x66;
0000000000000489: MOV
000000000000048a: ADD
000000000000048b: ADD
000000000000048c: ADD
000000000000048d: DEC
000000000000048e: LEA
000000000000048f: ADD
0000000000000490: CMP
0000000000000491: db 0x59;
0000000000000492: ADD
0000000000000493: TEST
0000000000000494: AND
0000000000000495: ENTER
0000000000000496: ADD
0000000000000497: ADD
0000000000000498: ADD
0000000000000499: MOV
000000000000049a: OR
000000000000049b: ADD
000000000000049c: ADD
000000000000049d: ADD
000000000000049e: db 0x66;
000000000000049f: MOV
00000000000004a0: ADD
00000000000004a1: ADD
00000000000004a2: ADD
00000000000004a3: DEC
00000000000004a4: LEA
00000000000004a5: ADD
00000000000004a6: SBB
00000000000004a7: db 0x59;
00000000000004a8: ADD
00000000000004a9: TEST
00000000000004aa: AND
00000000000004ab: FDIVR
00000000000004ac: ADD
00000000000004ad: ADD
00000000000004ae: ADD
00000000000004af: MOV
00000000000004b0: OR
00000000000004b1: ADD
00000000000004b2: ADD
00000000000004b3: ADD
00000000000004b4: db 0x66;
00000000000004b5: MOV
00000000000004b6: ADD
00000000000004b7: ADD
00000000000004b8: ADD
00000000000004b9: DEC
00000000000004ba: LEA
00000000000004bb: ADD
00000000000004bc: CLI
00000000000004bd: POP
00000000000004be: ADD
00000000000004bf: ADD
00000000000004c0: DEC
00000000000004c1: MOV
00000000000004c2: TEST
00000000000004c3: AND
00000000000004c4: CALL
00000000000004c5: ADD
00000000000004c6: ADD
00000000000004c7: ADD
00000000000004c8: MOV
00000000000004c9: PUSH
00000000000004ca: ADD
00000000000004cb: ADD
00000000000004cc: ADD
00000000000004cd: db 0x66;
00000000000004ce: MOV
00000000000004cf: ADD
00000000000004d0: ADD
00000000000004d1: ADD
00000000000004d2: DEC
00000000000004d3: LEA
00000000000004d4: ADD
00000000000004d5: FIDIVR
00000000000004d6: POP
00000000000004d7: ADD
00000000000004d8: ADD
00000000000004d9: DEC
00000000000004da: MOV
00000000000004db: TEST
00000000000004dc: AND
00000000000004dd: CLC
00000000000004de: ADD
00000000000004df: ADD
00000000000004e0: ADD
00000000000004e1: MOV
00000000000004e2: POP
00000000000004e3: ADD
00000000000004e4: ADD
00000000000004e5: ADD
00000000000004e6: db 0x66;
00000000000004e7: MOV
00000000000004e8: ADD
00000000000004e9: ADD
00000000000004ea: ADD
00000000000004eb: DEC
00000000000004ec: LEA
00000000000004ed: ADD
00000000000004ee: db 0xba;
00000000000004ef: POP
00000000000004f0: MOV
00000000000004f1: TEST
00000000000004f2: AND
00000000000004f3: OR
00000000000004f4: ADD
00000000000004f5: ADD
00000000000004f6: ADD
00000000000004f7: DEC
00000000000004f8: LEA
00000000000004f9: ADD
00000000000004fa: CMPSD
00000000000004fb: POP
00000000000004fc: ADD
00000000000004fd: ADD
00000000000004fe: DEC
00000000000004ff: MOV
0000000000000500: TEST
0000000000000501: AND
0000000000000502: SBB
0000000000000503: ADD
0000000000000504: ADD
0000000000000505: ADD
0000000000000506: LEA
0000000000000507: db 0x45;
0000000000000508: ADD
0000000000000509: AND
000000000000050a: AND
000000000000050b: ADD
000000000000050c: ADD
000000000000050d: ADD
000000000000050e: DEC
000000000000050f: LEA
0000000000000510: ADD
0000000000000511: MOV
0000000000000512: POP
0000000000000513: ADD
0000000000000514: ADD
0000000000000515: DEC
0000000000000516: MOV
0000000000000517: TEST
0000000000000518: AND
0000000000000519: SUB
000000000000051a: ADD
000000000000051b: ADD
000000000000051c: ADD
000000000000051d: LEA
000000000000051e: db 0x45;
000000000000051f: ADD
0000000000000520: AND
0000000000000521: XOR
0000000000000522: ADD
0000000000000523: ADD
0000000000000524: ADD
0000000000000525: DEC
0000000000000526: LEA
0000000000000527: ADD
0000000000000528: IMUL
0000000000000529: POP
000000000000052a: ADD
000000000000052b: ADD
000000000000052c: DEC
000000000000052d: MOV
000000000000052e: TEST
000000000000052f: AND
0000000000000530: CMP
0000000000000531: ADD
0000000000000532: ADD
0000000000000533: ADD
0000000000000534: LEA
0000000000000535: db 0x45;
0000000000000536: ADD
0000000000000537: AND
0000000000000538: INC
0000000000000539: ADD
000000000000053a: ADD
000000000000053b: ADD
000000000000053c: DEC
000000000000053d: LEA
000000000000053e: ADD
000000000000053f: db 0x4d;
0000000000000540: POP
0000000000000541: MOV
0000000000000542: TEST
0000000000000543: AND
0000000000000544: DEC
0000000000000545: ADD
0000000000000546: ADD
0000000000000547: ADD
0000000000000548: LEA
0000000000000549: db 0x45;
000000000000054a: ADD
000000000000054b: AND
000000000000054c: PUSH
000000000000054d: ADD
000000000000054e: ADD
000000000000054f: ADD
0000000000000550: DEC
0000000000000551: LEA
0000000000000552: ADD
0000000000000553: DAS
0000000000000554: POP
0000000000000555: ADD
0000000000000556: ADD
0000000000000557: DEC
0000000000000558: MOV
0000000000000559: TEST
000000000000055a: AND
000000000000055b: POP
000000000000055c: ADD
000000000000055d: ADD
000000000000055e: ADD
000000000000055f: LEA
0000000000000560: db 0x45;
0000000000000561: ADD
0000000000000562: AND
0000000000000563: PUSHAD
0000000000000564: ADD
0000000000000565: ADD
0000000000000566: ADD
0000000000000567: DEC
0000000000000568: LEA
0000000000000569: ADD
000000000000056a: ADC
000000000000056b: POP
000000000000056c: ADD
000000000000056d: ADD
000000000000056e: DEC
000000000000056f: MOV
0000000000000570: TEST
0000000000000571: AND
0000000000000572: PUSH
0000000000000573: ADD
0000000000000574: ADD
0000000000000575: ADD
0000000000000576: LEA
0000000000000577: db 0x45;
0000000000000578: PUSH
0000000000000579: AND
000000000000057a: JO
000000000000057b: ADD
000000000000057c: ADD
000000000000057d: ADD
000000000000057e: DEC
000000000000057f: LEA
0000000000000580: ADD
0000000000000581: REP
0000000000000582: db 0x57;
0000000000000583: ADD
0000000000000584: TEST
0000000000000585: AND
0000000000000586: JS
0000000000000587: ADD
0000000000000588: ADD
0000000000000589: ADD
000000000000058a: LEA
000000000000058b: db 0x45;
000000000000058c: POP
000000000000058d: AND
000000000000058e: CMP
000000000000058f: ADD
0000000000000590: ADD
0000000000000591: ADD
0000000000000592: DEC
0000000000000593: LEA
0000000000000594: ADD
0000000000000595: ADX
0000000000000596: db 0x57;
0000000000000597: ADD
0000000000000598: TEST
0000000000000599: AND
000000000000059a: MOV
000000000000059b: ADD
000000000000059c: ADD
000000000000059d: ADD
000000000000059e: LEA
000000000000059f: db 0x45;
00000000000005a0: OR
00000000000005a1: AND
00000000000005a2: NOP
00000000000005a3: ADD
00000000000005a4: ADD
00000000000005a5: ADD
00000000000005a6: DEC
00000000000005a7: LEA
00000000000005a8: ADD
00000000000005a9: db 0xb7, 0x57;
00000000000005ab: ADD
00000000000005ac: TEST
00000000000005ad: AND
00000000000005ae: CWDE
00000000000005af: ADD
00000000000005b0: ADD
00000000000005b1: ADD
00000000000005b2: LEA
00000000000005b3: db 0x45;
00000000000005b4: OR
00000000000005b5: AND
00000000000005b6: MOV
00000000000005b7: ADD
00000000000005b8: ADD
00000000000005b9: ADD
00000000000005ba: DEC
00000000000005bb: LEA
00000000000005bc: ADD
00000000000005bd: CDQ
00000000000005be: db 0x57;
00000000000005bf: ADD
00000000000005c0: TEST
00000000000005c1: AND
00000000000005c2: TEST
00000000000005c3: ADD
00000000000005c4: ADD
00000000000005c5: ADD
00000000000005c6: LEA
00000000000005c7: db 0x45;
00000000000005c8: OR
00000000000005c9: AND
00000000000005ca: MOV
00000000000005cb: ADD
00000000000005cc: ADD
00000000000005cd: ADD
00000000000005ce: DEC
00000000000005cf: LEA
00000000000005d0: ADD
00000000000005d1: JPO
00000000000005d2: db 0x57;
00000000000005d3: ADD
00000000000005d4: TEST
00000000000005d5: AND
00000000000005d6: MOV
00000000000005d7: ADD
00000000000005d8: ADD
00000000000005d9: ADD
00000000000005da: LEA
00000000000005db: db 0x45;
00000000000005dc: OR
00000000000005dd: AND
00000000000005de: SAR
00000000000005df: ADD
00000000000005e0: ADD
00000000000005e1: ADD
00000000000005e2: DEC
00000000000005e3: LEA
00000000000005e4: ADD
00000000000005e5: db 0x5d, 0x57;
00000000000005e7: ADD
00000000000005e8: TEST
00000000000005e9: AND
00000000000005ea: ENTER
00000000000005eb: ADD
00000000000005ec: ADD
00000000000005ed: ADD
00000000000005ee: LEA
00000000000005ef: db 0x45;
00000000000005f0: OR
00000000000005f1: AND
00000000000005f2: SAR
00000000000005f3: ADD
00000000000005f4: ADD
00000000000005f5: ADD
00000000000005f6: DEC
00000000000005f7: LEA
00000000000005f8: ADD
00000000000005f9: AAS
00000000000005fa: db 0x57;
00000000000005fb: ADD
00000000000005fc: TEST
00000000000005fd: AND
00000000000005fe: FDIVR
00000000000005ff: ADD
0000000000000600: ADD
0000000000000601: ADD
0000000000000602: LEA
0000000000000603: db 0x45;
0000000000000604: OR
0000000000000605: AND
0000000000000606: LOOPNE
0000000000000607: ADD
0000000000000608: ADD
0000000000000609: ADD
000000000000060a: DEC
000000000000060b: LEA
000000000000060c: ADD
000000000000060d: AND
000000000000060e: db 0x57;
000000000000060f: ADD
0000000000000610: TEST
0000000000000611: AND
0000000000000612: CALL
0000000000000613: ADD
0000000000000614: ADD
0000000000000615: ADD
0000000000000616: LEA
0000000000000617: db 0x45;
0000000000000618: PUSH
0000000000000619: AND
000000000000061a: LOCK
000000000000061b: ADD
000000000000061c: ADD
000000000000061d: ADD
000000000000061e: DEC
000000000000061f: LEA
0000000000000620: ADD
0000000000000621: ADD
0000000000000622: db 0x57;
0000000000000623: ADD
0000000000000624: TEST
0000000000000625: AND
0000000000000626: CLC
0000000000000627: ADD
0000000000000628: ADD
0000000000000629: ADD
000000000000062a: LEA
000000000000062b: db 0x45;
000000000000062c: POP
000000000000062d: AND
000000000000062e: ADD
000000000000062f: ADD
0000000000000630: ADD
0000000000000631: ADD
0000000000000632: DEC
0000000000000633: LEA
0000000000000634: ADD
0000000000000635: IN
0000000000000636: db 0x56;
0000000000000637: ADD
0000000000000638: TEST
0000000000000639: AND
000000000000063a: OR
000000000000063b: ADD
000000000000063c: ADD
000000000000063d: ADD
000000000000063e: LEA
000000000000063f: db 0x45;
0000000000000640: ADC
0000000000000641: AND
0000000000000642: ADC
0000000000000643: ADD
0000000000000644: ADD
0000000000000645: ADD
0000000000000646: DEC
0000000000000647: LEA
0000000000000648: ADD
0000000000000649: MOV
000000000000064a: db 0x56;
000000000000064b: ADD
000000000000064c: TEST
000000000000064d: AND
000000000000064e: SBB
000000000000064f: ADD
0000000000000650: ADD
0000000000000651: ADD
0000000000000652: LEA
0000000000000653: db 0x45;
0000000000000654: ADC
0000000000000655: AND
0000000000000656: AND
0000000000000657: ADD
0000000000000658: ADD
0000000000000659: ADD
000000000000065a: DEC
000000000000065b: LEA
000000000000065c: ADD
000000000000065d: TEST
000000000000065e: db 0x56;
000000000000065f: ADD
0000000000000660: TEST
0000000000000661: AND
0000000000000662: SUB
0000000000000663: ADD
0000000000000664: ADD
0000000000000665: ADD
0000000000000666: LEA
0000000000000667: db 0x45;
0000000000000668: ADC
0000000000000669: AND
000000000000066a: XOR
000000000000066b: ADD
000000000000066c: ADD
000000000000066d: ADD
000000000000066e: DEC
000000000000066f: LEA
0000000000000670: ADD
0000000000000671: MOV
0000000000000672: db 0x56;
0000000000000673: ADD
0000000000000674: TEST
0000000000000675: AND
0000000000000676: CMP
0000000000000677: ADD
0000000000000678: ADD
0000000000000679: ADD
000000000000067a: LEA
000000000000067b: db 0x45;
000000000000067c: ADC
000000000000067d: AND
000000000000067e: INC
000000000000067f: ADD
0000000000000680: ADD
0000000000000681: ADD
0000000000000682: DEC
0000000000000683: LEA
0000000000000684: ADD
0000000000000685: INSD
0000000000000686: db 0x56;
0000000000000687: ADD
0000000000000688: TEST
0000000000000689: AND
000000000000068a: DEC
000000000000068b: ADD
000000000000068c: ADD
000000000000068d: ADD
000000000000068e: LEA
000000000000068f: db 0x45;
0000000000000690: ADC
0000000000000691: AND
0000000000000692: PUSH
0000000000000693: ADD
0000000000000694: ADD
0000000000000695: ADD
0000000000000696: DEC
0000000000000697: LEA
0000000000000698: ADD
0000000000000699: db 0x4f, 0x56;
000000000000069b: ADD
000000000000069c: TEST
000000000000069d: AND
000000000000069e: POP
000000000000069f: ADD
00000000000006a0: ADD
00000000000006a1: ADD
00000000000006a2: LEA
00000000000006a3: db 0x45;
00000000000006a4: ADC
00000000000006a5: AND
00000000000006a6: PUSHAD
00000000000006a7: ADD
00000000000006a8: ADD
00000000000006a9: ADD
00000000000006aa: DEC
00000000000006ab: LEA
00000000000006ac: ADD
00000000000006ad: XOR
00000000000006ae: db 0x56;
00000000000006af: ADD
00000000000006b0: TEST
00000000000006b1: AND
00000000000006b2: PUSH
00000000000006b3: ADD
00000000000006b4: ADD
00000000000006b5: ADD
00000000000006b6: LEA
00000000000006b7: db 0x45;
00000000000006b8: PUSH
00000000000006b9: AND
00000000000006ba: JO
00000000000006bb: ADD
00000000000006bc: ADD
00000000000006bd: ADD
00000000000006be: DEC
00000000000006bf: LEA
00000000000006c0: ADD
00000000000006c1: ADC
00000000000006c2: db 0x56;
00000000000006c3: ADD
00000000000006c4: TEST
00000000000006c5: AND
00000000000006c6: JS
00000000000006c7: ADD
00000000000006c8: ADD
00000000000006c9: ADD
00000000000006ca: LEA
00000000000006cb: db 0x45;
00000000000006cc: POP
00000000000006cd: AND
00000000000006ce: CMP
00000000000006cf: ADD
00000000000006d0: ADD
00000000000006d1: ADD
00000000000006d2: DEC
00000000000006d3: LEA
00000000000006d4: ADD
00000000000006d5: CMC
00000000000006d6: db 0x55;
00000000000006d7: ADD
00000000000006d8: TEST
00000000000006d9: AND
00000000000006da: MOV
00000000000006db: ADD
00000000000006dc: ADD
00000000000006dd: ADD
00000000000006de: LEA
00000000000006df: db 0x45;
00000000000006e0: SBB
00000000000006e1: AND
00000000000006e2: NOP
00000000000006e3: ADD
00000000000006e4: ADD
00000000000006e5: ADD
00000000000006e6: DEC
00000000000006e7: LEA
00000000000006e8: ADD
00000000000006e9: XLATB
00000000000006ea: db 0x55;
00000000000006eb: ADD
00000000000006ec: TEST
00000000000006ed: AND
00000000000006ee: CWDE
00000000000006ef: ADD
00000000000006f0: ADD
00000000000006f1: ADD
00000000000006f2: LEA
00000000000006f3: db 0x45;
00000000000006f4: SBB
00000000000006f5: AND
00000000000006f6: MOV
00000000000006f7: ADD
00000000000006f8: ADD
00000000000006f9: ADD
00000000000006fa: DEC
00000000000006fb: LEA
00000000000006fc: ADD
00000000000006fd: db 0xb9, 0x55;
00000000000006ff: ADD
0000000000000700: TEST
0000000000000701: AND
0000000000000702: TEST
0000000000000703: ADD
0000000000000704: ADD
0000000000000705: ADD
0000000000000706: LEA
0000000000000707: db 0x45;
0000000000000708: SBB
0000000000000709: MOV
000000000000070a: db 0x55;
000000000000070b: ADD
000000000000070c: TEST
000000000000070d: AND
000000000000070e: MOV
000000000000070f: ADD
0000000000000710: ADD
0000000000000711: ADD
0000000000000712: DEC
0000000000000713: LEA
0000000000000714: ADD
0000000000000715: NOP
0000000000000716: db 0x55;
0000000000000717: ADD
0000000000000718: SBB
0000000000000719: TEST
000000000000071a: db 0x55;
000000000000071b: ADD
000000000000071c: TEST
000000000000071d: AND
000000000000071e: MOV
000000000000071f: ADD
0000000000000720: ADD
0000000000000721: ADD
0000000000000722: LEA
0000000000000723: db 0x45;
0000000000000724: SBB
0000000000000725: OUTSD
0000000000000726: db 0x55;
0000000000000727: ADD
0000000000000728: TEST
0000000000000729: AND
000000000000072a: SAR
000000000000072b: ADD
000000000000072c: ADD
000000000000072d: ADD
000000000000072e: DEC
000000000000072f: LEA
0000000000000730: ADD
0000000000000731: db 0x5c, 0x55;
0000000000000733: ADD
0000000000000734: ADC
0000000000000735: db 0x51, 0x55;
0000000000000737: ADD
0000000000000738: TEST
0000000000000739: AND
000000000000073a: ENTER
000000000000073b: ADD
000000000000073c: ADD
000000000000073d: ADD
000000000000073e: LEA
000000000000073f: db 0x45;
0000000000000740: SBB
0000000000000741: AND
0000000000000742: CLC
0000000000000743: ADD
0000000000000744: ADD
0000000000000745: ADD
0000000000000746: db 0x66;
0000000000000747: MOV
0000000000000748: ADD
0000000000000749: ADD
000000000000074a: ADD
000000000000074b: DEC
000000000000074c: LEA
000000000000074d: ADD
000000000000074e: SUB
000000000000074f: db 0x55;
0000000000000750: ADD
0000000000000751: PUSHFD
0000000000000752: AND
0000000000000753: SBB
0000000000000754: ADD
0000000000000755: ADD
0000000000000756: ADD
0000000000000757: DEC
0000000000000758: MOV
0000000000000759: TEST
000000000000075a: AND
000000000000075b: FDIVR
000000000000075c: ADD
000000000000075d: ADD
000000000000075e: ADD
000000000000075f: LEA
0000000000000760: db 0x45;
0000000000000761: POP
0000000000000762: AND
0000000000000763: SUB
0000000000000764: ADD
0000000000000765: ADD
0000000000000766: ADD
0000000000000767: db 0x66;
0000000000000768: MOV
0000000000000769: ADD
000000000000076a: ADD
000000000000076b: ADD
000000000000076c: DEC
000000000000076d: LEA
000000000000076e: ADD
000000000000076f: STD
0000000000000770: db 0x54;
0000000000000771: ADD
0000000000000772: db 0x94;
0000000000000773: AND
0000000000000774: ADD
0000000000000775: DEC
0000000000000776: MOV
0000000000000777: TEST
0000000000000778: AND
0000000000000779: CALL
000000000000077a: ADD
000000000000077b: ADD
000000000000077c: ADD
000000000000077d: LEA
000000000000077e: db 0x45;
000000000000077f: AND
0000000000000780: AND
0000000000000781: LOCK
0000000000000782: ADD
0000000000000783: ADD
0000000000000784: ADD
0000000000000785: LEA
0000000000000786: db 0x45;
0000000000000787: AND
0000000000000788: AND
0000000000000789: ADD
000000000000078a: ADD
000000000000078b: ADD
000000000000078c: ADD
000000000000078d: DEC
000000000000078e: LEA
000000000000078f: ADD
0000000000000790: INT
0000000000000791: db 0x54;
0000000000000792: ADD
0000000000000793: TEST
0000000000000794: AND
0000000000000795: OR
0000000000000796: ADD
0000000000000797: ADD
0000000000000798: ADD
0000000000000799: LEA
000000000000079a: db 0x45;
000000000000079b: AND
000000000000079c: AND
000000000000079d: ADC
000000000000079e: ADD
000000000000079f: ADD
00000000000007a0: ADD
00000000000007a1: LEA
00000000000007a2: db 0x45;
00000000000007a3: AND
00000000000007a4: AND
00000000000007a5: AND
00000000000007a6: ADD
00000000000007a7: ADD
00000000000007a8: ADD
00000000000007a9: LEA
00000000000007aa: db 0x45;
00000000000007ab: ES
00000000000007ac: AND
00000000000007ad: XOR
00000000000007ae: ADD
00000000000007af: ADD
00000000000007b0: ADD
00000000000007b1: DEC
00000000000007b2: LEA
00000000000007b3: ADD
00000000000007b4: CWDE
00000000000007b5: db 0x54;
00000000000007b6: ADD
00000000000007b7: TEST
00000000000007b8: AND
00000000000007b9: CMP
00000000000007ba: ADD
00000000000007bb: ADD
00000000000007bc: ADD
00000000000007bd: LEA
00000000000007be: db 0x45;
00000000000007bf: DAA
00000000000007c0: AND
00000000000007c1: INC
00000000000007c2: ADD
00000000000007c3: ADD
00000000000007c4: ADD
00000000000007c5: DEC
00000000000007c6: LEA
00000000000007c7: ADD
00000000000007c8: JPE
00000000000007c9: db 0x54;
00000000000007ca: ADD
00000000000007cb: TEST
00000000000007cc: AND
00000000000007cd: DEC
00000000000007ce: ADD
00000000000007cf: ADD
00000000000007d0: ADD
00000000000007d1: LEA
00000000000007d2: db 0x45;
00000000000007d3: SUB
00000000000007d4: AND
00000000000007d5: PUSH
00000000000007d6: ADD
00000000000007d7: ADD
00000000000007d8: ADD
00000000000007d9: DEC
00000000000007da: LEA
00000000000007db: ADD
00000000000007dc: db 0x5c, 0x54;
00000000000007de: ADD
00000000000007df: TEST
00000000000007e0: AND
00000000000007e1: POP
00000000000007e2: ADD
00000000000007e3: ADD
00000000000007e4: ADD
00000000000007e5: LEA
00000000000007e6: db 0x45;
00000000000007e7: SUB
00000000000007e8: AND
00000000000007e9: PUSHAD
00000000000007ea: ADD
00000000000007eb: ADD
00000000000007ec: ADD
00000000000007ed: DEC
00000000000007ee: LEA
00000000000007ef: ADD
00000000000007f0: TAKEN
00000000000007f1: db 0x54;
00000000000007f2: ADD
00000000000007f3: TEST
00000000000007f4: AND
00000000000007f5: PUSH
00000000000007f6: ADD
00000000000007f7: ADD
00000000000007f8: ADD
00000000000007f9: LEA
00000000000007fa: db 0x45;
00000000000007fb: SUB
00000000000007fc: AND
00000000000007fd: JO
00000000000007fe: ADD
00000000000007ff: ADD
0000000000000800: ADD
0000000000000801: DEC
0000000000000802: LEA
0000000000000803: ADD
0000000000000804: AND
0000000000000805: db 0x54;
0000000000000806: ADD
0000000000000807: TEST
0000000000000808: AND
0000000000000809: JS
000000000000080a: ADD
000000000000080b: ADD
000000000000080c: ADD
000000000000080d: LEA
000000000000080e: db 0x45;
000000000000080f: SUB
0000000000000810: AND
0000000000000811: CMP
0000000000000812: ADD
0000000000000813: ADD
0000000000000814: ADD
0000000000000815: DEC
0000000000000816: LEA
0000000000000817: ADD
0000000000000818: ADD
0000000000000819: db 0x54;
000000000000081a: ADD
000000000000081b: TEST
000000000000081c: AND
000000000000081d: MOV
000000000000081e: ADD
000000000000081f: ADD
0000000000000820: ADD
0000000000000821: LEA
0000000000000822: db 0x45;
0000000000000823: SUB
0000000000000824: AND
0000000000000825: NOP
0000000000000826: ADD
0000000000000827: ADD
0000000000000828: ADD
0000000000000829: LEA
000000000000082a: db 0x45;
000000000000082b: NTAKEN
000000000000082c: AND
000000000000082d: MOV
000000000000082e: ADD
000000000000082f: ADD
0000000000000830: ADD
0000000000000831: DEC
0000000000000832: LEA
0000000000000833: ADD
0000000000000834: FNSTCW
0000000000000835: db 0x53;
0000000000000836: ADD
0000000000000837: TEST
0000000000000838: AND
0000000000000839: TEST
000000000000083a: ADD
000000000000083b: ADD
000000000000083c: ADD
000000000000083d: LEA
000000000000083e: db 0x45;
000000000000083f: DAS
0000000000000840: AND
0000000000000841: MOV
0000000000000842: ADD
0000000000000843: ADD
0000000000000844: ADD
0000000000000845: DEC
0000000000000846: LEA
0000000000000847: ADD
0000000000000848: db 0xbb, 0x53;
000000000000084a: ADD
000000000000084b: TEST
000000000000084c: AND
000000000000084d: MOV
000000000000084e: ADD
000000000000084f: ADD
0000000000000850: ADD
0000000000000851: LEA
0000000000000852: db 0x45;
0000000000000853: XOR
0000000000000854: AND
0000000000000855: SAR
0000000000000856: ADD
0000000000000857: ADD
0000000000000858: ADD
0000000000000859: DEC
000000000000085a: LEA
000000000000085b: ADD
000000000000085c: POPFD
000000000000085d: db 0x53;
000000000000085e: ADD
000000000000085f: TEST
0000000000000860: AND
0000000000000861: ENTER
0000000000000862: ADD
0000000000000863: ADD
0000000000000864: ADD
0000000000000865: LEA
0000000000000866: db 0x45;
0000000000000867: XOR
0000000000000868: AND
0000000000000869: SAR
000000000000086a: ADD
000000000000086b: ADD
000000000000086c: ADD
000000000000086d: DEC
000000000000086e: LEA
000000000000086f: ADD
0000000000000870: JG
0000000000000871: db 0x53;
0000000000000872: ADD
0000000000000873: TEST
0000000000000874: AND
0000000000000875: FDIVR
0000000000000876: ADD
0000000000000877: ADD
0000000000000878: ADD
0000000000000879: LEA
000000000000087a: db 0x45;
000000000000087b: XOR
000000000000087c: AND
000000000000087d: LOOPNE
000000000000087e: ADD
000000000000087f: ADD
0000000000000880: ADD
0000000000000881: DEC
0000000000000882: LEA
0000000000000883: ADD
0000000000000884: POPAD
0000000000000885: db 0x53;
0000000000000886: ADD
0000000000000887: TEST
0000000000000888: AND
0000000000000889: CALL
000000000000088a: ADD
000000000000088b: ADD
000000000000088c: ADD
000000000000088d: LEA
000000000000088e: db 0x45;
000000000000088f: XOR
0000000000000890: db 0x4b, 0x53;
0000000000000892: ADD
0000000000000893: XOR
0000000000000894: CMP
0000000000000895: db 0x53;
0000000000000896: ADD
0000000000000897: TEST
0000000000000898: AND
0000000000000899: LOCK
000000000000089a: ADD
000000000000089b: ADD
000000000000089c: ADD
000000000000089d: LEA
000000000000089e: db 0x45;
000000000000089f: SS
00000000000008a0: AND
00000000000008a1: CLC
00000000000008a2: ADD
00000000000008a3: ADD
00000000000008a4: ADD
00000000000008a5: db 0x66;
00000000000008a6: MOV
00000000000008a7: ADD
00000000000008a8: ADD
00000000000008a9: ADD
00000000000008aa: DEC
00000000000008ab: LEA
00000000000008ac: ADD
00000000000008ad: PUSH
00000000000008ae: db 0x53;
00000000000008af: ADD
00000000000008b0: db 0xb4;
00000000000008b1: AND
00000000000008b2: ADD
00000000000008b3: DEC
00000000000008b4: MOV
00000000000008b5: TEST
00000000000008b6: AND
00000000000008b7: OR
00000000000008b8: ADD
00000000000008b9: ADD
00000000000008ba: ADD
00000000000008bb: LEA
00000000000008bc: db 0x45;
00000000000008bd: AAA
00000000000008be: AND
00000000000008bf: ADC
00000000000008c0: ADD
00000000000008c1: ADD
00000000000008c2: ADD
00000000000008c3: DEC
00000000000008c4: LEA
00000000000008c5: ADD
00000000000008c6: LOCK
00000000000008c7: db 0x52;
00000000000008c8: ADD
00000000000008c9: TEST
00000000000008ca: AND
00000000000008cb: SBB
00000000000008cc: ADD
00000000000008cd: ADD
00000000000008ce: ADD
00000000000008cf: LEA
00000000000008d0: db 0x45;
00000000000008d1: CMP
00000000000008d2: AND
00000000000008d3: AND
00000000000008d4: ADD
00000000000008d5: ADD
00000000000008d6: ADD
00000000000008d7: DEC
00000000000008d8: LEA
00000000000008d9: ADD
00000000000008da: SAR
00000000000008db: db 0x52;
00000000000008dc: ADD
00000000000008dd: TEST
00000000000008de: AND
00000000000008df: SUB
00000000000008e0: ADD
00000000000008e1: ADD
00000000000008e2: ADD
00000000000008e3: LEA
00000000000008e4: db 0x45;
00000000000008e5: CMP
00000000000008e6: AND
00000000000008e7: XOR
00000000000008e8: ADD
00000000000008e9: ADD
00000000000008ea: ADD
00000000000008eb: DEC
00000000000008ec: LEA
00000000000008ed: ADD
00000000000008ee: db 0xb4, 0x52;
00000000000008f0: ADD
00000000000008f1: TEST
00000000000008f2: AND
00000000000008f3: CMP
00000000000008f4: ADD
00000000000008f5: ADD
00000000000008f6: ADD
00000000000008f7: LEA
00000000000008f8: db 0x45;
00000000000008f9: CMP
00000000000008fa: AND
00000000000008fb: INC
00000000000008fc: ADD
00000000000008fd: ADD
00000000000008fe: ADD
00000000000008ff: DEC
0000000000000900: LEA
0000000000000901: ADD
0000000000000902: db 0x96, 0x52;
0000000000000904: ADD
0000000000000905: TEST
0000000000000906: AND
0000000000000907: DEC
0000000000000908: ADD
0000000000000909: ADD
000000000000090a: ADD
000000000000090b: LEA
000000000000090c: db 0x45;
000000000000090d: TAKEN
000000000000090e: AND
000000000000090f: PUSH
0000000000000910: ADD
0000000000000911: ADD
0000000000000912: ADD
0000000000000913: DEC
0000000000000914: LEA
0000000000000915: ADD
0000000000000916: JS
0000000000000917: db 0x52;
0000000000000918: ADD
0000000000000919: TEST
000000000000091a: AND
000000000000091b: POP
000000000000091c: ADD
000000000000091d: ADD
000000000000091e: ADD
000000000000091f: LEA
0000000000000920: db 0x45;
0000000000000921: AAS
0000000000000922: AND
0000000000000923: PUSHAD
0000000000000924: ADD
0000000000000925: ADD
0000000000000926: ADD
0000000000000927: DEC
0000000000000928: LEA
0000000000000929: ADD
000000000000092a: db 0x5a, 0x52;
000000000000092c: ADD
000000000000092d: TEST
000000000000092e: AND
000000000000092f: PUSH
0000000000000930: ADD
0000000000000931: ADD
0000000000000932: ADD
0000000000000933: LEA
0000000000000934: db 0x45;
0000000000000935: INC
0000000000000936: AND
0000000000000937: JO
0000000000000938: ADD
0000000000000939: ADD
000000000000093a: ADD
000000000000093b: DEC
000000000000093c: LEA
000000000000093d: ADD
000000000000093e: CMP
000000000000093f: db 0x52;
0000000000000940: ADD
0000000000000941: TEST
0000000000000942: AND
0000000000000943: JS
0000000000000944: ADD
0000000000000945: ADD
0000000000000946: ADD
0000000000000947: LEA
0000000000000948: db 0x45, 0x46, 0x66;
000000000000094b: MOV
000000000000094c: ADD
000000000000094d: ADD
000000000000094e: ADD
000000000000094f: DEC
0000000000000950: LEA
0000000000000951: ADD
0000000000000952: PUSH
0000000000000953: db 0x52;
0000000000000954: ADD
0000000000000955: TEST
0000000000000956: AND
0000000000000957: MOV
0000000000000958: ADD
0000000000000959: ADD
000000000000095a: ADD
000000000000095b: MOV
000000000000095c: ADD
000000000000095d: ADD
000000000000095e: ADD
000000000000095f: ADD
0000000000000960: db 0x66;
0000000000000961: MOV
0000000000000962: ADD
0000000000000963: ADD
0000000000000964: ADD
0000000000000965: DEC
0000000000000966: LEA
0000000000000967: ADD
0000000000000968: CLI
0000000000000969: db 0x51;
000000000000096a: ADD
000000000000096b: TEST
000000000000096c: AND
000000000000096d: CWDE
000000000000096e: ADD
000000000000096f: ADD
0000000000000970: ADD
0000000000000971: MOV
0000000000000972: ADD
0000000000000973: ADD
0000000000000974: ADD
0000000000000975: ADD
0000000000000976: db 0x66;
0000000000000977: MOV
0000000000000978: ADD
0000000000000979: ADD
000000000000097a: ADD
000000000000097b: DEC
000000000000097c: LEA
000000000000097d: ADD
000000000000097e: SETALC
000000000000097f: db 0x51;
0000000000000980: ADD
0000000000000981: TEST
0000000000000982: AND
0000000000000983: TEST
0000000000000984: ADD
0000000000000985: ADD
0000000000000986: ADD
0000000000000987: MOV
0000000000000988: ADD
0000000000000989: ADD
000000000000098a: ADD
000000000000098b: ADD
000000000000098c: db 0x66;
000000000000098d: MOV
000000000000098e: ADD
000000000000098f: ADD
0000000000000990: ADD
0000000000000991: DEC
0000000000000992: LEA
0000000000000993: ADD
0000000000000994: db 0xb2, 0x51;
0000000000000996: ADD
0000000000000997: TEST
0000000000000998: AND
0000000000000999: MOV
000000000000099a: ADD
000000000000099b: ADD
000000000000099c: ADD
000000000000099d: MOV
000000000000099e: ADD
000000000000099f: ADD
00000000000009a0: ADD
00000000000009a1: ADD
00000000000009a2: db 0x66;
00000000000009a3: MOV
00000000000009a4: ADD
00000000000009a5: ADD
00000000000009a6: ADD
00000000000009a7: DEC
00000000000009a8: LEA
00000000000009a9: ADD
00000000000009aa: MOV
00000000000009ab: db 0x51;
00000000000009ac: ADD
00000000000009ad: TEST
00000000000009ae: AND
00000000000009af: ENTER
00000000000009b0: ADD
00000000000009b1: ADD
00000000000009b2: ADD
00000000000009b3: MOV
00000000000009b4: ADD
00000000000009b5: ADD
00000000000009b6: ADD
00000000000009b7: ADD
00000000000009b8: db 0x66;
00000000000009b9: MOV
00000000000009ba: ADD
00000000000009bb: ADD
00000000000009bc: ADD
00000000000009bd: DEC
00000000000009be: LEA
00000000000009bf: ADD
00000000000009c0: PUSH
00000000000009c1: db 0x51;
00000000000009c2: ADD
00000000000009c3: TEST
00000000000009c4: AND
00000000000009c5: FDIVR
00000000000009c6: ADD
00000000000009c7: ADD
00000000000009c8: ADD
00000000000009c9: MOV
00000000000009ca: PUSH
00000000000009cb: ADD
00000000000009cc: ADD
00000000000009cd: ADD
00000000000009ce: db 0x66;
00000000000009cf: MOV
00000000000009d0: ADD
00000000000009d1: ADD
00000000000009d2: ADD
00000000000009d3: DEC
00000000000009d4: LEA
00000000000009d5: ADD
00000000000009d6: db 0x46, 0x51;
00000000000009d8: ADD
00000000000009d9: TEST
00000000000009da: AND
00000000000009db: CALL
00000000000009dc: ADD
00000000000009dd: ADD
00000000000009de: ADD
00000000000009df: MOV
00000000000009e0: POP
00000000000009e1: ADD
00000000000009e2: ADD
00000000000009e3: ADD
00000000000009e4: db 0x66;
00000000000009e5: MOV
00000000000009e6: ADD
00000000000009e7: ADD
00000000000009e8: ADD
00000000000009e9: DEC
00000000000009ea: LEA
00000000000009eb: ADD
00000000000009ec: AND
00000000000009ed: db 0x51;
00000000000009ee: ADD
00000000000009ef: TEST
00000000000009f0: AND
00000000000009f1: CLC
00000000000009f2: ADD
00000000000009f3: ADD
00000000000009f4: ADD
00000000000009f5: MOV
00000000000009f6: OR
00000000000009f7: ADD
00000000000009f8: ADD
00000000000009f9: ADD
00000000000009fa: db 0x66;
00000000000009fb: MOV
00000000000009fc: ADD
00000000000009fd: ADD
00000000000009fe: ADD
00000000000009ff: DEC
0000000000000a00: LEA
0000000000000a01: ADD
0000000000000a02: DEC
0000000000000a03: PUSH
0000000000000a04: ADD
0000000000000a05: ADD
0000000000000a06: DEC
0000000000000a07: MOV
0000000000000a08: TEST
0000000000000a09: AND
0000000000000a0a: OR
0000000000000a0b: ADD
0000000000000a0c: ADD
0000000000000a0d: ADD
0000000000000a0e: MOV
0000000000000a0f: OR
0000000000000a10: ADD
0000000000000a11: ADD
0000000000000a12: ADD
0000000000000a13: db 0x66;
0000000000000a14: MOV
0000000000000a15: ADD
0000000000000a16: ADD
0000000000000a17: ADD
0000000000000a18: DEC
0000000000000a19: LEA
0000000000000a1a: ADD
0000000000000a1b: FIDIVR
0000000000000a1c: PUSH
0000000000000a1d: ADD
0000000000000a1e: ADD
0000000000000a1f: DEC
0000000000000a20: MOV
0000000000000a21: TEST
0000000000000a22: AND
0000000000000a23: SBB
0000000000000a24: ADD
0000000000000a25: ADD
0000000000000a26: ADD
0000000000000a27: MOV
0000000000000a28: OR
0000000000000a29: ADD
0000000000000a2a: ADD
0000000000000a2b: ADD
0000000000000a2c: db 0x66;
0000000000000a2d: MOV
0000000000000a2e: ADD
0000000000000a2f: ADD
0000000000000a30: ADD
0000000000000a31: MOV
0000000000000a32: OR
0000000000000a33: ADD
0000000000000a34: ADD
0000000000000a35: ADD
0000000000000a36: db 0x66;
0000000000000a37: MOV
0000000000000a38: ADD
0000000000000a39: ADD
0000000000000a3a: ADD
0000000000000a3b: DEC
0000000000000a3c: LEA
0000000000000a3d: ADD
0000000000000a3e: TEST
0000000000000a3f: PUSH
0000000000000a40: ADD
0000000000000a41: ADD
0000000000000a42: DEC
0000000000000a43: LEA
0000000000000a44: OR
0000000000000a45: CALLF
0000000000000a46: PUSH
0000000000000a47: ADD
0000000000000a48: ADD
0000000000000a49: DEC
0000000000000a4a: MOV
0000000000000a4b: TEST
0000000000000a4c: AND
0000000000000a4d: CMP
0000000000000a4e: ADD
0000000000000a4f: ADD
0000000000000a50: ADD
0000000000000a51: MOV
0000000000000a52: OR
0000000000000a53: ADD
0000000000000a54: ADD
0000000000000a55: ADD
0000000000000a56: DEC
0000000000000a57: MOV
0000000000000a58: MOV
0000000000000a59: AND
0000000000000a5a: TEST
0000000000000a5b: ADD
0000000000000a5c: ADD
0000000000000a5d: ADD
0000000000000a5e: db 0x66;
0000000000000a5f: MOV
0000000000000a60: ADD
0000000000000a61: ADD
0000000000000a62: ADD
0000000000000a63: DEC
0000000000000a64: LEA
0000000000000a65: ADD
0000000000000a66: OUTSB
0000000000000a67: PUSH
0000000000000a68: ADD
0000000000000a69: ADD
0000000000000a6a: DEC
0000000000000a6b: MOV
0000000000000a6c: TEST
0000000000000a6d: AND
0000000000000a6e: DEC
0000000000000a6f: ADD
0000000000000a70: ADD
0000000000000a71: ADD
0000000000000a72: MOV
0000000000000a73: OR
0000000000000a74: ADD
0000000000000a75: ADD
0000000000000a76: ADD
0000000000000a77: db 0x66;
0000000000000a78: MOV
0000000000000a79: ADD
0000000000000a7a: ADD
0000000000000a7b: ADD
0000000000000a7c: DEC
0000000000000a7d: LEA
0000000000000a7e: ADD
0000000000000a7f: db 0x4a;
0000000000000a80: PUSH
0000000000000a81: MOV
0000000000000a82: TEST
0000000000000a83: AND
0000000000000a84: POP
0000000000000a85: ADD
0000000000000a86: ADD
0000000000000a87: ADD
0000000000000a88: MOV
0000000000000a89: PUSH
0000000000000a8a: ADD
0000000000000a8b: ADD
0000000000000a8c: ADD
0000000000000a8d: db 0x66;
0000000000000a8e: MOV
0000000000000a8f: ADD
0000000000000a90: ADD
0000000000000a91: ADD
0000000000000a92: DEC
0000000000000a93: LEA
0000000000000a94: ADD
0000000000000a95: ES
0000000000000a96: PUSH
0000000000000a97: ADD
0000000000000a98: ADD
0000000000000a99: DEC
0000000000000a9a: MOV
0000000000000a9b: TEST
0000000000000a9c: AND
0000000000000a9d: PUSH
0000000000000a9e: ADD
0000000000000a9f: ADD
0000000000000aa0: ADD
0000000000000aa1: MOV
0000000000000aa2: POP
0000000000000aa3: ADD
0000000000000aa4: ADD
0000000000000aa5: ADD
0000000000000aa6: db 0x66;
0000000000000aa7: MOV
0000000000000aa8: ADD
0000000000000aa9: ADD
0000000000000aaa: ADD
0000000000000aab: DEC
0000000000000aac: LEA
0000000000000aad: ADD
0000000000000aae: ADD
0000000000000aaf: PUSH
0000000000000ab0: ADD
0000000000000ab1: ADD
0000000000000ab2: DEC
0000000000000ab3: MOV
0000000000000ab4: TEST
0000000000000ab5: AND
0000000000000ab6: JS
0000000000000ab7: ADD
0000000000000ab8: ADD
0000000000000ab9: ADD
0000000000000aba: MOV
0000000000000abb: ADC
0000000000000abc: ADD
0000000000000abd: ADD
0000000000000abe: ADD
0000000000000abf: db 0x66;
0000000000000ac0: MOV
0000000000000ac1: ADD
0000000000000ac2: ADD
0000000000000ac3: ADD
0000000000000ac4: DEC
0000000000000ac5: LEA
0000000000000ac6: ADD
0000000000000ac7: FDIVP
0000000000000ac8: db 0x4f;
0000000000000ac9: ADD
0000000000000aca: TEST
0000000000000acb: AND
0000000000000acc: MOV
0000000000000acd: ADD
0000000000000ace: ADD
0000000000000acf: ADD
0000000000000ad0: MOV
0000000000000ad1: ADC
0000000000000ad2: ADD
0000000000000ad3: ADD
0000000000000ad4: ADD
0000000000000ad5: db 0x66;
0000000000000ad6: MOV
0000000000000ad7: ADD
0000000000000ad8: ADD
0000000000000ad9: ADD
0000000000000ada: DEC
0000000000000adb: LEA
0000000000000adc: ADD
0000000000000add: db 0xba, 0x4f;
0000000000000adf: ADD
0000000000000ae0: TEST
0000000000000ae1: AND
0000000000000ae2: CWDE
0000000000000ae3: ADD
0000000000000ae4: ADD
0000000000000ae5: ADD
0000000000000ae6: MOV
0000000000000ae7: ADC
0000000000000ae8: ADD
0000000000000ae9: ADD
0000000000000aea: ADD
0000000000000aeb: db 0x66;
0000000000000aec: MOV
0000000000000aed: ADD
0000000000000aee: ADD
0000000000000aef: ADD
0000000000000af0: MOV
0000000000000af1: ADC
0000000000000af2: ADD
0000000000000af3: ADD
0000000000000af4: ADD
0000000000000af5: db 0x66;
0000000000000af6: MOV
0000000000000af7: ADD
0000000000000af8: ADD
0000000000000af9: ADD
0000000000000afa: DEC
0000000000000afb: LEA
0000000000000afc: ADD
0000000000000afd: MOV
0000000000000afe: db 0x4f;
0000000000000aff: ADD
0000000000000b00: TEST
0000000000000b01: AND
0000000000000b02: MOV
0000000000000b03: ADD
0000000000000b04: ADD
0000000000000b05: ADD
0000000000000b06: MOV
0000000000000b07: ADC
0000000000000b08: ADD
0000000000000b09: ADD
0000000000000b0a: ADD
0000000000000b0b: db 0x66;
0000000000000b0c: MOV
0000000000000b0d: ADD
0000000000000b0e: ADD
0000000000000b0f: ADD
0000000000000b10: DEC
0000000000000b11: LEA
0000000000000b12: ADD
0000000000000b13: GS
0000000000000b14: db 0x4f;
0000000000000b15: ADD
0000000000000b16: TEST
0000000000000b17: AND
0000000000000b18: ENTER
0000000000000b19: ADD
0000000000000b1a: ADD
0000000000000b1b: ADD
0000000000000b1c: MOV
0000000000000b1d: ADC
0000000000000b1e: ADD
0000000000000b1f: ADD
0000000000000b20: ADD
0000000000000b21: db 0x66;
0000000000000b22: MOV
0000000000000b23: ADD
0000000000000b24: ADD
0000000000000b25: ADD
0000000000000b26: DEC
0000000000000b27: LEA
0000000000000b28: ADD
0000000000000b29: db 0x41, 0x4f;
0000000000000b2b: ADD
0000000000000b2c: TEST
0000000000000b2d: AND
0000000000000b2e: FDIVR
0000000000000b2f: ADD
0000000000000b30: ADD
0000000000000b31: ADD
0000000000000b32: MOV
0000000000000b33: PUSH
0000000000000b34: ADD
0000000000000b35: ADD
0000000000000b36: ADD
0000000000000b37: db 0x66;
0000000000000b38: MOV
0000000000000b39: ADD
0000000000000b3a: ADD
0000000000000b3b: ADD
0000000000000b3c: DEC
0000000000000b3d: LEA
0000000000000b3e: ADD
0000000000000b3f: SBB
0000000000000b40: db 0x4f;
0000000000000b41: ADD
0000000000000b42: TEST
0000000000000b43: AND
0000000000000b44: CALL
0000000000000b45: ADD
0000000000000b46: ADD
0000000000000b47: ADD
0000000000000b48: MOV
0000000000000b49: POP
0000000000000b4a: ADD
0000000000000b4b: ADD
0000000000000b4c: ADD
0000000000000b4d: db 0x66;
0000000000000b4e: MOV
0000000000000b4f: ADD
0000000000000b50: ADD
0000000000000b51: ADD
0000000000000b52: DEC
0000000000000b53: LEA
0000000000000b54: ADD
0000000000000b55: STC
0000000000000b56: db 0x4e;
0000000000000b57: ADD
0000000000000b58: TEST
0000000000000b59: AND
0000000000000b5a: CLC
0000000000000b5b: ADD
0000000000000b5c: ADD
0000000000000b5d: ADD
0000000000000b5e: MOV
0000000000000b5f: SBB
0000000000000b60: ADD
0000000000000b61: ADD
0000000000000b62: ADD
0000000000000b63: db 0x66;
0000000000000b64: MOV
0000000000000b65: PUSH
0000000000000b66: ADD
0000000000000b67: ADD
0000000000000b68: DEC
0000000000000b69: LEA
0000000000000b6a: ADD
0000000000000b6b: ADX
0000000000000b6c: db 0x4e;
0000000000000b6d: ADD
0000000000000b6e: TEST
0000000000000b6f: AND
0000000000000b70: OR
0000000000000b71: PUSH
0000000000000b72: ADD
0000000000000b73: ADD
0000000000000b74: MOV
0000000000000b75: SBB
0000000000000b76: ADD
0000000000000b77: ADD
0000000000000b78: ADD
0000000000000b79: db 0x66;
0000000000000b7a: MOV
0000000000000b7b: PUSH
0000000000000b7c: ADD
0000000000000b7d: ADD
0000000000000b7e: DEC
0000000000000b7f: LEA
0000000000000b80: ADD
0000000000000b81: db 0xb1, 0x4e;
0000000000000b83: ADD
0000000000000b84: TEST
0000000000000b85: AND
0000000000000b86: SBB
0000000000000b87: PUSH
0000000000000b88: ADD
0000000000000b89: ADD
0000000000000b8a: MOV
0000000000000b8b: SBB
0000000000000b8c: ADD
0000000000000b8d: ADD
0000000000000b8e: ADD
0000000000000b8f: db 0x66;
0000000000000b90: MOV
0000000000000b91: PUSH
0000000000000b92: ADD
0000000000000b93: ADD
0000000000000b94: DEC
0000000000000b95: LEA
0000000000000b96: ADD
0000000000000b97: LEA
0000000000000b98: db 0x4e;
0000000000000b99: ADD
0000000000000b9a: TEST
0000000000000b9b: AND
0000000000000b9c: SUB
0000000000000b9d: PUSH
0000000000000b9e: ADD
0000000000000b9f: ADD
0000000000000ba0: MOV
0000000000000ba1: SBB
0000000000000ba2: ADD
0000000000000ba3: ADD
0000000000000ba4: ADD
0000000000000ba5: db 0x66;
0000000000000ba6: MOV
0000000000000ba7: PUSH
0000000000000ba8: ADD
0000000000000ba9: ADD
0000000000000baa: DEC
0000000000000bab: LEA
0000000000000bac: ADD
0000000000000bad: IMUL
0000000000000bae: db 0x4e;
0000000000000baf: ADD
0000000000000bb0: TEST
0000000000000bb1: AND
0000000000000bb2: CMP
0000000000000bb3: PUSH
0000000000000bb4: ADD
0000000000000bb5: ADD
0000000000000bb6: MOV
0000000000000bb7: SBB
0000000000000bb8: ADD
0000000000000bb9: ADD
0000000000000bba: ADD
0000000000000bbb: db 0x66;
0000000000000bbc: MOV
0000000000000bbd: PUSH
0000000000000bbe: ADD
0000000000000bbf: ADD
0000000000000bc0: DEC
0000000000000bc1: LEA
0000000000000bc2: ADD
0000000000000bc3: db 0x45, 0x4e;
0000000000000bc5: ADD
0000000000000bc6: TEST
0000000000000bc7: AND
0000000000000bc8: DEC
0000000000000bc9: PUSH
0000000000000bca: ADD
0000000000000bcb: ADD
0000000000000bcc: MOV
0000000000000bcd: SBB
0000000000000bce: ADD
0000000000000bcf: ADD
0000000000000bd0: ADD
0000000000000bd1: db 0x66;
0000000000000bd2: MOV
0000000000000bd3: PUSH
0000000000000bd4: ADD
0000000000000bd5: ADD
0000000000000bd6: DEC
0000000000000bd7: LEA
0000000000000bd8: ADD
0000000000000bd9: AND
0000000000000bda: db 0x4e;
0000000000000bdb: ADD
0000000000000bdc: TEST
0000000000000bdd: AND
0000000000000bde: POP
0000000000000bdf: PUSH
0000000000000be0: ADD
0000000000000be1: ADD
0000000000000be2: MOV
0000000000000be3: PUSH
0000000000000be4: ADD
0000000000000be5: ADD
0000000000000be6: ADD
0000000000000be7: db 0x66;
0000000000000be8: MOV
0000000000000be9: PUSH
0000000000000bea: ADD
0000000000000beb: ADD
0000000000000bec: DEC
0000000000000bed: LEA
0000000000000bee: ADD
0000000000000bef: STD
0000000000000bf0: db 0x4d;
0000000000000bf1: ADD
0000000000000bf2: TEST
0000000000000bf3: AND
0000000000000bf4: PUSH
0000000000000bf5: PUSH
0000000000000bf6: ADD
0000000000000bf7: ADD
0000000000000bf8: MOV
0000000000000bf9: POP
0000000000000bfa: ADD
0000000000000bfb: ADD
0000000000000bfc: ADD
0000000000000bfd: db 0x66;
0000000000000bfe: MOV
0000000000000bff: PUSH
0000000000000c00: ADD
0000000000000c01: ADD
0000000000000c02: DEC
0000000000000c03: LEA
0000000000000c04: ADD
0000000000000c05: FNSTCW
0000000000000c06: db 0x4d;
0000000000000c07: ADD
0000000000000c08: ADD
0000000000000c09: RETF
0000000000000c0a: db 0x4d;
0000000000000c0b: ADD
0000000000000c0c: PUSHFD
0000000000000c0d: AND
0000000000000c0e: PUSH
0000000000000c0f: POP
